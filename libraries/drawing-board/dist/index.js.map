{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description 绘图板\n */\n\nimport {\n  INTERACTIVE_MODE,\n  IMG_TYPE,\n  PEN_MODE,\n  Options,\n  Point,\n  EventItem,\n  PenStyle,\n  EventAction,\n  EventPointerType,\n  EventItemCondition\n} from './types/drawing-board'\nimport { IeCompatibleBlob } from './types/blob'\n\nimport { blob2File } from './libs/file-convert'\nimport { getImageFromURL } from './libs/utils'\nimport { $ } from './libs/dom'\nimport {\n  MSG_CONTAINER_MISS_SELECTOR,\n  MSG_CONTAINER_NOT_FOUND,\n  MSG_ANGLE_NOT_LAWFUL,\n  MSG_CTX_CANT_GET,\n  MSG_LAST_DRAG_POINT_NOT_FOUNT,\n  MSG_LAST_PAINT_POINT_NOT_FOUNT,\n  MSG_EVENT_TARGET_NOT_FOUNT,\n  MSG_BG_URL_NOT_LAWFUL,\n  MSG_BLOB_CANT_GEN,\n  MSG_DATAURL_CANT_GEN\n} from './libs/err-msg'\n\nimport { getOffsetPosition, getScroll } from './libs/touch-offset'\n\nclass DrawingBoard {\n  static INTERACTIVE_MODE_ENUM: INTERACTIVE_MODE[] = ['mouse', 'touch', 'both'] // 支持的交互模式枚举\n  static IMG_TYPE_ENUM: IMG_TYPE[] = ['jpg', 'jpeg', 'png', 'webp'] // 支持的图片类型枚举\n  static PEN_MODE_ENUM: PEN_MODE[] = ['paint', 'drag', 'empty'] // 支持的画笔模式枚举\n\n  static DEFAULT_WIDTH: number = 300 // 默认宽度\n  static DEFAULT_HEIGHT: number = 150 // 默认高度\n\n  static LIMIT_MIN_REVOKE_STEPS = 10 // 最大撤销步数 下限值\n  static LIMIT_MAX_REVOKE_STEPS = 50 // 最大撤销步数 上限值\n\n  static LIMIT_MIN_SCALE = 0.1 // 最小缩放值，最小需做限制，最大无需限制\n\n  static DEFAULT_SCALE = 1 // 默认缩放值\n  static DEFAULT_MAX_SCALE = 5 // 默认最大缩放值\n\n  private static _defaultOptions: Options = {\n    size: [], // canvas尺寸，默认[300,150]\n    className: '', // 自定义样式类\n\n    manualMount: false, // 手动挂载\n\n    maxRevokeSteps: 10, // 最大回退步数\n\n    interactiveMode: 'mouse', // 交互模式 enum:['mouse','touch','both'] ,both将同时绑定mouse、touch事件(PointerEvent存在兼容性问题，放弃使用)\n\n    penMode: 'empty', // 'paint' | 'drag' | 'empty' 画笔模式\n\n    penColor: 'red', // 画笔颜色\n    penWidth: 6, // 画笔粗细\n\n    bgImgURL: '', // 背景图url或base64\n    bgImgRotate: 0, // 背景图旋转角度\n    bgColor: '#fff', // 背景色\n\n    onRevokeStackChange: null, // 撤销栈改变时的回调\n    onPaintEnd: null, // 绘制一笔结束的回调\n\n    minScale: 1, // 最小缩放比例\n    maxScale: 3, // 最大缩放比例\n\n    initialScale: 1, // 初始缩放比例\n\n    scaleTransition: true, // 是否开启缩放动画\n    scaleStep: 0.1 // 缩放步进值\n  }\n\n  originalOptions: Options // 原始选项\n\n  options: Options // 合并后的选项\n\n  container: HTMLElement\n  el: HTMLCanvasElement | null\n\n  width: number\n  height: number\n\n  manualMount: boolean // 是否手动挂载\n\n  revokeStack: any[] // 撤销栈\n\n  MAX_REVOKE_STEPS: number // 最大撤销步数\n\n  isPainting: boolean // 是否绘制中\n  lastPaintPoint: Point | null // 最后一个绘制点坐标\n\n  isDraging: boolean // 是否拖拽中\n  lastDragPoint: Point | null // 最后一个拖拽点坐标\n  dragTransformX: number // x偏移值\n  dragTransformY: number // Y偏移值\n\n  penMode: PEN_MODE // 画笔模式\n  interactiveMode: INTERACTIVE_MODE // 交互模式\n  eventList: EventItem[] // 事件列表\n\n  penColor: string // 画笔颜色\n  penWidth: number // 画笔粗细\n\n  className: string // 自定义样式类\n\n  bgImgURL: string // 背景图url\n  bgColor: string // 背景色\n  bgImgRotate: number // 背景图旋转角度\n  _bgImgObject: CanvasImageSource | null // 背景图Image对象\n  originalSize: number[] // 原始尺寸\n\n  onRevokeStackChange: any // 撤销回调\n  onPaintEnd: any // 绘制结束回调\n\n  paintCount: number // 绘制次数\n\n  scaleTransition: boolean // 缩放动画\n\n  minScale: number // 最小缩放值\n  maxScale: number // 最大缩放值\n\n  initialScale: number // 初始缩放值\n  scale: number // 当前缩放值\n\n  scaleStep: number // 缩放步进值\n\n  ctx: CanvasRenderingContext2D | null // 绘图上下文\n\n  /**\n   * Creates an instance of DrawingBoard.\n   *\n   * @param {(HTMLElement | string)} container 选择器或el\n   * @param {Options} options 选项\n   * @memberof DrawingBoard\n   */\n  constructor(container: HTMLElement | string, options: Options) {\n    if (!container) throw new Error(MSG_CONTAINER_MISS_SELECTOR)\n\n    this.container = this._getContainer(container)\n\n    this.originalOptions = options\n\n    this.options = {\n      ...DrawingBoard._defaultOptions,\n      ...options\n    }\n\n    const {\n      size,\n      className,\n      manualMount,\n      maxRevokeSteps,\n      interactiveMode,\n      penColor,\n      penWidth,\n      bgImgURL,\n      bgImgRotate,\n      bgColor,\n      onRevokeStackChange,\n      onPaintEnd,\n      penMode,\n      minScale,\n      maxScale,\n      initialScale,\n      scaleTransition,\n      scaleStep\n    } = this.options\n\n    // 尺寸未传，则使用容器的尺寸\n    const [width, height] = size || []\n\n    this.width = DrawingBoard.DEFAULT_WIDTH\n    this.height = DrawingBoard.DEFAULT_HEIGHT\n\n    this.setSize([\n      width == null ? DrawingBoard.DEFAULT_WIDTH : width,\n      height == null ? DrawingBoard.DEFAULT_HEIGHT : height\n    ])\n\n    this.manualMount = !!manualMount\n\n    this.revokeStack = []\n\n    this.MAX_REVOKE_STEPS = this._getLawfulMaxRevokeSteps(Number(maxRevokeSteps))\n\n    this.isPainting = false\n    this.lastPaintPoint = null\n\n    this.isDraging = false\n    this.lastDragPoint = null\n    this.dragTransformX = 0\n    this.dragTransformY = 0\n\n    this.penMode = this._getPenMode(penMode)\n\n    this.interactiveMode = this._getInteractiveMode(interactiveMode)\n\n    this.eventList = this._makeEventList()\n\n    this.penColor = this._getPenColor(penColor)\n    this.penWidth = this._getPenWidth(penWidth)\n\n    this.className = this._getClassName(className)\n\n    this.bgImgURL = bgImgURL || ''\n    this.bgColor = bgColor || ''\n    this.bgImgRotate = this._getLawfulRotateAngle(bgImgRotate)\n    this._bgImgObject = null\n    this.originalSize = []\n    if (bgImgURL) this._getImgAndDraw(bgImgURL) // 有设置背景图，则获取并绘制\n\n    this.onRevokeStackChange = onRevokeStackChange\n    this.onPaintEnd = onPaintEnd\n\n    this.paintCount = 0 // 记录绘制次数\n\n    this.scaleTransition = !!scaleTransition // 缩放动画\n\n    this.scaleStep = typeof scaleStep !== 'number' || isNaN(scaleStep) ? 0.1 : scaleStep\n\n    // 限制最小、最大缩放比例\n    this.minScale = this._getLawfulMinScale(minScale)\n    this.maxScale = this._getLawfulMaxScale(maxScale)\n\n    this.initialScale = this._getLawfulScale(initialScale) // 获取合法初始缩放值\n\n    this.scale = this.initialScale // 获取合法的缩放值\n    // 下一循环，等待mount后，设置缩放\n    setTimeout(() => {\n      this._handleScaleChange()\n    }, 0)\n\n    if (this.container) this.container.style.overflow = 'hidden' // 设置容器溢出隐藏，防止缩放展示出现异常\n\n    this.el = null\n    this.ctx = null\n\n    if (!this.manualMount) this.mount() // 不需要手动挂载时，自动挂载\n  }\n\n  /**\n   * 获取合法的缩放值\n   *\n   * @private\n   * @param {*} scale 缩放值\n   * @returns {number} 合法的缩放值\n   * @memberof DrawingBoard\n   */\n  private _getLawfulScale(scale: any): number {\n    if (typeof scale !== 'number' || isNaN(scale)) return DrawingBoard.DEFAULT_SCALE\n\n    if (scale < this.minScale) return this.minScale\n\n    if (scale > this.maxScale) return this.maxScale\n\n    return scale\n  }\n\n  /**\n   * 获取合法的最小缩放值\n   *\n   * @private\n   * @param {*} scale 缩放值\n   * @returns {number} 合法的最小缩放值\n   * @memberof DrawingBoard\n   */\n  private _getLawfulMinScale(scale: any): number {\n    if (typeof scale !== 'number' || isNaN(scale) || scale < DrawingBoard.LIMIT_MIN_SCALE)\n      return DrawingBoard.LIMIT_MIN_SCALE\n\n    return scale\n  }\n\n  /**\n   * 获取合法的最大缩放值\n   *\n   * @private\n   * @param {*} scale 缩放值\n   * @returns {number} 合法的最大缩放值\n   * @memberof DrawingBoard\n   */\n  private _getLawfulMaxScale(scale: any): number {\n    if (typeof scale !== 'number' || isNaN(scale) || scale < DrawingBoard.LIMIT_MIN_SCALE)\n      return DrawingBoard.DEFAULT_MAX_SCALE\n\n    return scale\n  }\n\n  /**\n   * 获取合法的交互模式\n   *\n   * @private\n   * @param {*} mode 模式字符串\n   * @returns {PEN_MODE} 模式字符串\n   * @memberof DrawingBoard\n   */\n  private _getInteractiveMode(mode: any): INTERACTIVE_MODE {\n    return DrawingBoard.INTERACTIVE_MODE_ENUM.includes(mode) ? mode : 'mouse'\n  }\n\n  /**\n   * 获取合法的画笔模式\n   *\n   * @private\n   * @param {*} mode 模式字符串\n   * @returns {PEN_MODE} 画笔模式\n   * @memberof DrawingBoard\n   */\n  private _getPenMode(mode: any): PEN_MODE {\n    return (DrawingBoard.PEN_MODE_ENUM as string[]).includes(mode) ? mode : 'empty'\n  }\n\n  /**\n   * 获取container容器\n   *\n   * @private\n   * @param {(HTMLElement | string)} container 选择器或el\n   * @returns container容器el\n   * @memberof DrawingBoard\n   */\n  private _getContainer(container: HTMLElement | string): HTMLElement {\n    if (container instanceof HTMLElement) return container\n\n    const el = $(container)\n    if (el == null) {\n      throw new Error(MSG_CONTAINER_NOT_FOUND)\n    } else {\n      return el\n    }\n  }\n\n  /**\n   * 获取合法className\n   *\n   * @private\n   * @param {*} name 样式类\n   * @returns {string} 合法样式类\n   * @memberof DrawingBoard\n   */\n  private _getClassName(name: any): string {\n    return name && typeof name === 'string' ? name : ''\n  }\n\n  /**\n   * 获取合法penColor\n   *\n   * @private\n   * @param {*} color 颜色\n   * @returns {string} 合法颜色值\n   * @memberof DrawingBoard\n   */\n  private _getPenColor(color: any): string {\n    return !color || typeof color !== 'string' ? 'red' : color\n  }\n\n  /**\n   * 获取合法penWidth\n   *\n   * @private\n   * @param {*} width 粗细\n   * @returns {number}  合法画笔粗细\n   * @memberof DrawingBoard\n   */\n  private _getPenWidth(width: any): number {\n    return !width || typeof width !== 'number' || isNaN(width) || width <= 0 ? 6 : width\n  }\n\n  /**\n   * 获取合法角度值(逆时针旋转角度记录为正值，-90度 记录为270；450记录为90,10度记录为0,55度记录为90)\n   *\n   * @private\n   * @param {*} angle 角度\n   * @returns {number} 合法角度值\n   * @memberof DrawingBoard\n   */\n  private _getLawfulRotateAngle(angle: any): number {\n    if (typeof angle !== 'number' || isNaN(angle)) throw new Error(MSG_ANGLE_NOT_LAWFUL)\n\n    const tempAngle = angle % 360\n    const newAngle = tempAngle < 0 ? tempAngle + 360 : tempAngle\n    // 角度>=45，计入下一个90度，保证返回的角度 % 90 ===0\n    const roundAngle =\n      newAngle % 90 >= 45 ? (Math.ceil(newAngle / 90) * 90) % 360 : (Math.floor(newAngle / 90) * 90) % 360\n\n    // 可能存在-0\n    return Math.abs(roundAngle)\n  }\n\n  /**\n   * 获取事件相对触发对象的偏移值\n   *\n   * @private\n   * @param {(MouseEvent | TouchEvent)} e 事件对象\n   * @returns {Point} 坐标\n   * @memberof DrawingBoard\n   */\n  private _getPointOffset(e: MouseEvent | TouchEvent): Point {\n    if (e instanceof MouseEvent) {\n      return {\n        x: e.offsetX,\n        y: e.offsetY\n      }\n    } else {\n      const { touches } = e\n      const { clientX, clientY } = touches[0]\n      // 获取滚动距离来计算绘画位置\n      const { parentScrollTop, parentScrollLeft } = getScroll(<HTMLElement>e.target)\n\n      const { x, y } = getOffsetPosition(clientX + parentScrollLeft, clientY + parentScrollTop, this.el)\n\n      return { x, y }\n    }\n  }\n\n  /**\n   * 获取合法的最大撤销步数\n   *\n   * @private\n   * @param {number} steps steps 步数\n   * @returns {number} 合法的最大撤销步数\n   * @memberof DrawingBoard\n   */\n  private _getLawfulMaxRevokeSteps(steps: number): number {\n    if (steps <= 0 || typeof steps !== 'number' || isNaN(steps)) return DrawingBoard.LIMIT_MIN_REVOKE_STEPS\n\n    if (steps > DrawingBoard.LIMIT_MAX_REVOKE_STEPS) return DrawingBoard.LIMIT_MAX_REVOKE_STEPS\n\n    return steps\n  }\n\n  /**\n   * 获取模式对应的指针类型\n   * @param {string} mode 模式\n   * @returns 类型字符串\n   */\n  private _getPointerType(mode: INTERACTIVE_MODE): EventPointerType {\n    if (mode === 'both') {\n      return 'touchAndMouse'\n    } else if (mode === 'touch') {\n      return 'touch'\n    } else {\n      return 'mouse'\n    }\n  }\n\n  /**\n   * 生成事件映射列表\n   *\n   * @private\n   * @returns {EventItem[]} 事件映射列表\n   * @memberof DrawingBoard\n   */\n  private _makeEventList(): EventItem[] {\n    return [\n      {\n        pointerType: 'mouse',\n        action: 'start',\n        name: 'mousedown',\n        handler: this._handlePointerStart\n      },\n      {\n        pointerType: 'mouse',\n        action: 'move',\n        name: 'mousemove',\n        handler: this._handlePointerMove\n      },\n      {\n        pointerType: 'mouse',\n        action: 'end',\n        name: 'mouseup',\n        handler: this._handlePointerEnd\n      },\n      {\n        pointerType: 'mouse',\n        action: 'leave',\n        name: 'mouseleave',\n        handler: this._handlePointerLeave\n      },\n      {\n        pointerType: 'touch',\n        action: 'start',\n        name: 'touchstart',\n        handler: this._handlePointerStart\n      },\n      {\n        pointerType: 'touch',\n        action: 'move',\n        name: 'touchmove',\n        handler: this._handlePointerMove\n      },\n      {\n        pointerType: 'touch',\n        action: 'end',\n        name: 'touchend',\n        handler: this._handlePointerEnd\n      },\n      {\n        pointerType: 'touch',\n        action: 'cancel',\n        name: 'touchcancel',\n        handler: this._handlePointerCancel\n      }\n    ]\n  }\n\n  /**\n   * 过滤出符合条件的EventItems\n   *\n   * @private\n   * @param {EventItemCondition} 过滤条件\n   * @returns {EventItem[]} EventItems数组\n   * @memberof DrawingBoard\n   */\n  private _getEventItems({ pointerType, action }: EventItemCondition): EventItem[] {\n    let filterFn: any\n\n    // pointerType不指定或为touchAndMouse时，只过滤action\n    if (!pointerType || pointerType === 'touchAndMouse') {\n      if (action) {\n        filterFn = (item: EventItem) => item.action === action\n      } else {\n        // pointerType、action都为空，则返回所有\n        return this.eventList\n      }\n    } else {\n      // pointerType存在并不为touchAndMouse时，需要同时过滤pointerType和action\n      if (action) {\n        filterFn = (item: EventItem) => item.pointerType === pointerType && item.action === action\n      } else {\n        filterFn = (item: EventItem) => item.pointerType === pointerType\n      }\n    }\n\n    return this.eventList.filter(filterFn)\n  }\n\n  /**\n   * 生成canvas元素\n   *\n   * @private\n   * @returns {HTMLCanvasElement} canvas DOM对象\n   * @memberof DrawingBoard\n   */\n  private _makeCanvas(): HTMLCanvasElement {\n    return document.createElement('canvas')\n  }\n\n  /**\n   * 获取绘图上下文\n   *\n   * @private\n   * @returns {CanvasRenderingContext2D} 2d上下文\n   * @memberof DrawingBoard\n   */\n  private _getCtx(): CanvasRenderingContext2D {\n    const ctx = this.el && this.el.getContext && this.el.getContext('2d')\n    if (ctx == null) throw new Error(MSG_CTX_CANT_GET)\n\n    return ctx\n  }\n\n  /**\n   * 设置canvas transform\n   *\n   * @private\n   * @param {number} x 横轴\n   * @param {number} y 纵轴\n   * @param {number} scale 缩放比例\n   * @param {boolean} [transition=false] 过渡动画\n   * @memberof DrawingBoard\n   */\n  private _setCanvasTransform(x: number, y: number, scale: number, transition: boolean = false): void {\n    if (!this.el) return\n\n    const text = `transform:scale(${scale}) translate3d(${x}px,${y}px,0);transform-origin:center;`\n    const cssText = transition ? text + 'transition:0.3s;' : text\n\n    this.el.setAttribute('style', cssText)\n  }\n\n  /**\n   * 设置canvas dom尺寸\n   *\n   * @private\n   * @param {number[]} [width, height] 宽高数组\n   * @memberof DrawingBoard\n   */\n  private _setDOMSize([width, height]: number[]): void {\n    if (width != null && this.el) this.el.width = width\n    if (height != null && this.el) this.el.height = height\n  }\n\n  /**\n   * 设置画笔模式\n   *\n   * @private\n   * @param {PEN_MODE} mode 画笔模式\n   * @memberof DrawingBoard\n   */\n  private _setPenMode(mode: PEN_MODE): void {\n    if (!DrawingBoard.PEN_MODE_ENUM.includes(mode)) return\n\n    this.penMode = mode\n  }\n\n  /**\n   * 保存当前画布状态\n   *\n   * @private\n   * @param {PEN_MODE} [type='paint'] 类型(绘制paint、清空clear) 默认paint\n   * @param {number} paintCount 绘制次数\n   * @param {ImageData} imageData 像素数据\n   * @memberof DrawingBoard\n   */\n  private _saveImageData(type = 'paint', paintCount: number, imageData: ImageData): void {\n    if (\n      !['paint', 'clear'].includes(type) ||\n      paintCount == null ||\n      !imageData ||\n      !(imageData instanceof ImageData)\n    ) {\n      return\n    }\n\n    if (this.revokeStack.length >= this.MAX_REVOKE_STEPS) {\n      this.revokeStack.shift()\n    }\n\n    // 保存类型及绘制次数(撤销时使用)\n    this.revokeStack.push({ type, paintCount, imageData })\n\n    this.onRevokeStackChange &&\n      typeof this.onRevokeStackChange === 'function' &&\n      this.onRevokeStackChange(this.revokeStack)\n\n    console.log('_saveImageData onRevokeStackChange', this.revokeStack)\n  }\n\n  /**\n   * 绑定当前模式对应动作的所有事件\n   * @param {String} action 动作\n   * @returns void\n   */\n  private _bindCurInteractiveModeEvents(action: EventAction): void {\n    if (!this.el) return\n\n    const pointerType = this._getPointerType(this.interactiveMode)\n\n    const condition: EventItemCondition = { pointerType, action }\n\n    this._cleanCurInteractiveModeEvents(condition)\n\n    this._bindEvent(condition)\n  }\n\n  /**\n   * 清除当前模式对应动作的所有事件\n   * @param {String} action 动作\n   * @returns void\n   */\n  private _cleanCurInteractiveModeEvents({ action }: EventItemCondition): void {\n    if (!this.el) return\n\n    const pointerType = this._getPointerType(this.interactiveMode)\n\n    const condition = { pointerType, action }\n\n    this._cleanEvent(condition)\n  }\n\n  /**\n   * 绑定符合特定条件的事件\n   * @param {Object} condition 过滤条件\n   * @returns void\n   */\n  private _bindEvent(condition: EventItemCondition = {}): void {\n    const eventItems = this._getEventItems(condition)\n    if (!eventItems || !eventItems.length) return\n\n    eventItems.forEach(({ name, handler }) => {\n      this.el && this.el.addEventListener(name, handler, true)\n    })\n  }\n\n  /**\n   * 清除符合特定条件的事件\n   * @param {Object} condition 过滤条件\n   * @returns void\n   */\n  private _cleanEvent(condition = {}): void {\n    const eventItems = this._getEventItems(condition)\n    if (!eventItems || !eventItems.length) return\n\n    eventItems.forEach(({ name, handler }) => this.el && this.el.removeEventListener(name, handler, true))\n  }\n\n  /**\n   * 单步撤销\n   *\n   * @private\n   * @memberof DrawingBoard\n   */\n  private _revoke(): void {\n    if (!this.ctx || !this.revokeStack || !this.revokeStack.length) return\n\n    const { imageData, paintCount: afterRevokePaintCount } = this.revokeStack.pop()\n\n    this.ctx.putImageData(imageData, 0, 0)\n\n    // 恢复绘制次数\n    this.paintCount = afterRevokePaintCount\n\n    this.onRevokeStackChange &&\n      typeof this.onRevokeStackChange === 'function' &&\n      this.onRevokeStackChange(this.revokeStack)\n\n    console.log('_revoke onRevokeStackChange', this.revokeStack, afterRevokePaintCount)\n  }\n\n  /**\n   * 获取背景图并绘制\n   *\n   * @private\n   * @param {string} bgImgURL 背景图url\n   * @memberof DrawingBoard\n   */\n  private _getImgAndDraw(bgImgURL: string): void {\n    getImageFromURL(bgImgURL)\n      .then(image => {\n        this._bgImgObject = image\n        // 保留原始尺寸，方便旋转时使用\n        this.originalSize = [image.width, image.height]\n        // TODO:此处存在异步问题，drawBg内部会使用ctx\n        this._drawBg(image, this.originalSize[0], this.originalSize[1])\n      })\n      .catch(err => {\n        console.log(err)\n        this._bgImgObject = null\n      })\n  }\n\n  /**\n   * 绘制背景底图\n   *\n   * @private\n   * @param {CanvasImageSource} imgObject 图像对象\n   * @param {number} w 宽\n   * @param {number} h 高\n   * @memberof DrawingBoard\n   */\n  private _drawBg(imgObject: CanvasImageSource, w: number, h: number) {\n    if (!imgObject || !this.ctx || !this.ctx.drawImage || !w || !h || w <= 0 || h <= 0) {\n      return\n    }\n\n    const sx = 0\n    const sy = 0\n    const sWidth = w\n    const sHeight = h\n\n    const dx = this.bgImgRotate === 0 || this.bgImgRotate === 180 ? -this.width / 2 : -this.height / 2\n    const dy = this.bgImgRotate === 0 || this.bgImgRotate === 180 ? -this.height / 2 : -this.width / 2\n\n    const dWidth = this.bgImgRotate === 0 || this.bgImgRotate === 180 ? this.width : this.height\n    const dHeight = this.bgImgRotate === 0 || this.bgImgRotate === 180 ? this.height : this.width\n\n    this.ctx.save()\n\n    this.ctx.translate(this.width / 2, this.height / 2)\n    this.ctx.rotate((Math.PI / 180) * this.bgImgRotate)\n\n    console.log('旋转参数:', sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight, this.bgImgRotate)\n\n    this.ctx.drawImage(imgObject, sx, sy, sWidth, sHeight, dx, dy, dWidth, dHeight)\n\n    this.ctx.restore()\n  }\n\n  /**\n   * 绘制圆形\n   *\n   * @private\n   * @param {number} x 横轴\n   * @param {number} y 纵轴\n   * @param {number} [radius=3] 半径\n   * @param {string} [color='red'] 画笔颜色\n   * @memberof DrawingBoard\n   */\n  private _drawCircle(x: number, y: number, radius = 3, color = 'red'): void {\n    if (!this.ctx) return\n    this.ctx.save()\n\n    this.ctx.fillStyle = color\n\n    this.ctx.beginPath()\n    this.ctx.arc(x, y, radius, 0, (Math.PI / 180) * 360, false)\n    this.ctx.fill()\n\n    this.ctx.restore()\n  }\n\n  /**\n   * 绘制移动时的直线\n   *\n   * @private\n   * @param {number} x1 起点x1\n   * @param {number} y1 起点y1\n   * @param {number} x2 终点x2\n   * @param {number} y2 终点y2\n   * @param {number} [width=6] 线条宽度\n   * @param {string} [color='red'] 线条颜色\n   * @memberof DrawingBoard\n   */\n  private _drawLine(x1: number, y1: number, x2: number, y2: number, width = 6, color = 'red'): void {\n    if (!this.ctx) return\n    this.ctx.save()\n\n    this.ctx.strokeStyle = color\n    this.ctx.lineWidth = width\n    this.ctx.lineCap = 'round'\n    this.ctx.lineJoin = 'round'\n\n    this.ctx.beginPath()\n    this.ctx.moveTo(x1, y1)\n    this.ctx.lineTo(x2, y2)\n    this.ctx.stroke()\n\n    this.ctx.restore()\n  }\n\n  /**\n   * 处理指针开始\n   *\n   * @private\n   * @param {Event} e 事件对象\n   * @returns void\n   * @memberof DrawingBoard\n   */\n  private _handlePointerStart = (e: MouseEvent | TouchEvent): void => {\n    console.log('_handlePointerStart', e.type)\n    if (this.penMode === 'empty') return\n\n    if (this.penMode === 'paint') this._handlePaintStart(e)\n\n    if (this.penMode === 'drag') this._handleDragStart(e)\n\n    this._bindCurInteractiveModeEvents('move')\n    this._bindCurInteractiveModeEvents('end')\n    this._bindCurInteractiveModeEvents('leave')\n  }\n\n  /**\n   * 处理绘制开始\n   *\n   * @private\n   * @param {Event} e 事件对象\n   * @memberof DrawingBoard\n   */\n  private _handlePaintStart(e: MouseEvent | TouchEvent): void {\n    this.isPainting = true\n\n    this.lastPaintPoint = this._getPointOffset(e)\n\n    console.log('handlePaintStart this.lastPaintPoint', e, this.lastPaintPoint)\n\n    // 绘制前保存状态\n    this.ctx &&\n      this._saveImageData('paint', this.paintCount, this.ctx.getImageData(0, 0, this.width, this.height))\n\n    this._drawCircle(this.lastPaintPoint.x, this.lastPaintPoint.y, this.penWidth / 2, this.penColor)\n  }\n\n  /**\n   * 处理拖拽开始\n   */\n  private _handleDragStart(e: MouseEvent | TouchEvent): void {\n    console.log('drag start')\n\n    this.isDraging = true\n\n    this.lastDragPoint = this._getPointOffset(e)\n  }\n\n  /**\n   * 处理指针移动\n   *\n   * @private\n   * @param {Event} e 事件对象\n   * @returns void\n   * @memberof DrawingBoard\n   */\n  private _handlePointerMove = (e: MouseEvent | TouchEvent): void => {\n    console.log('_handlePointerMove')\n\n    if (this.penMode === 'empty') return\n\n    if (this.penMode === 'paint') this._handlePaintMove(e)\n\n    if (this.penMode === 'drag') this._handleDragMove(e)\n  }\n\n  /**\n   * 处理绘制移动\n   */\n  private _handlePaintMove(e: MouseEvent | TouchEvent): void {\n    if (this.isPainting) {\n      const { x, y } = this._getPointOffset(e)\n\n      if (this.lastPaintPoint == null) throw new Error(MSG_LAST_PAINT_POINT_NOT_FOUNT)\n\n      const { x: lastX, y: lastY } = this.lastPaintPoint\n\n      this._drawLine(lastX, lastY, x, y, this.penWidth, this.penColor)\n      this.lastPaintPoint = { x, y }\n    }\n  }\n\n  /**\n   * 处理拖拽移动\n   *\n   * @private\n   * @param {(MouseEvent | TouchEvent)} e 事件对象\n   * @memberof DrawingBoard\n   */\n  private _handleDragMove(e: MouseEvent | TouchEvent): void {\n    console.log('drag move')\n    if (this.isDraging) {\n      const { x, y } = this._getPointOffset(e)\n\n      if (this.lastDragPoint == null) throw new Error(MSG_LAST_DRAG_POINT_NOT_FOUNT)\n\n      const { x: lastX, y: lastY } = this.lastDragPoint\n\n      this.dragTransformX += x - lastX\n      this.dragTransformY += y - lastY\n\n      this._setCanvasTransform(this.dragTransformX, this.dragTransformY, this.scale)\n    }\n  }\n\n  /**\n   * 处理指针结束\n   *\n   * @private\n   * @param {MouseEvent | TouchEvent} e 事件对象\n   * @returns void\n   * @memberof DrawingBoard\n   */\n  private _handlePointerEnd = (): void => {\n    console.log('_handlePointerEnd')\n\n    if (this.penMode === 'empty') return\n\n    if (this.penMode === 'paint') this._handlePaintEnd()\n\n    if (this.penMode === 'drag') this._handleDragEnd()\n\n    // 解绑相关事件\n    this._cleanCurInteractiveModeEvents({ action: 'move' })\n    this._cleanCurInteractiveModeEvents({ action: 'end' })\n    this._cleanCurInteractiveModeEvents({ action: 'leave' })\n  }\n\n  /**\n   * 处理绘制结束\n   */\n  private _handlePaintEnd(): void {\n    this.isPainting = false\n\n    this.paintCount++\n\n    this.onPaintEnd && typeof this.onPaintEnd === 'function' && this.onPaintEnd(this.paintCount)\n\n    console.log('_handlePointerEnd paintCount', this.paintCount)\n  }\n\n  /**\n   * 处理拖拽结束\n   */\n  private _handleDragEnd(): void {\n    console.log('drag end')\n\n    this.isDraging = false\n  }\n\n  /**\n   * 处理指针离开\n   *\n   * @private\n   * @param {Event} e 事件对象\n   * @returns void\n   * @memberof DrawingBoard\n   */\n  private _handlePointerLeave = (e: MouseEvent | TouchEvent): void => {\n    console.log('_handlePointerLeave')\n    if (this.isPainting || this.isDraging) this._handlePointerEnd()\n  }\n\n  /**\n   * 处理指针取消\n   *\n   * @private\n   * @param {Event} e 事件对象\n   * @returns void\n   * @memberof DrawingBoard\n   */\n  private _handlePointerCancel = (e: MouseEvent | TouchEvent): void => {\n    console.log('_handlePointerCancel')\n\n    if (this.isPainting || this.isDraging) this._handlePointerEnd()\n  }\n\n  /**\n   * 处理缩放比例改变\n   *\n   * @private\n   * @memberof DrawingBoard\n   */\n  private _handleScaleChange(): void {\n    if (!this.el) return\n\n    this._setCanvasTransform(this.dragTransformX, this.dragTransformY, this.scale, this.scaleTransition)\n  }\n\n  /**\n   * 设置画笔样式(粗细、颜色)\n   *\n   * @param {PenStyle} { color, width } 样式\n   * @memberof DrawingBoard\n   */\n  setPenStyle({ color, width }: PenStyle): void {\n    if (color) this.penColor = this._getPenColor(color)\n    if (width) this.penWidth = this._getPenWidth(width)\n  }\n\n  /**\n   * 设置canvas尺寸\n   *\n   * @param {number[]} [width, height] 宽高数组\n   * @memberof DrawingBoard\n   */\n  setSize([width, height]: number[]): void {\n    if (width) this.width = width\n    if (height) this.height = height\n\n    this._setDOMSize([width, height])\n  }\n\n  /**\n   * 设置样式名\n   *\n   * @param {string} name 样式类字符串\n   * @memberof DrawingBoard\n   */\n  setClassName(name: string): void {\n    if (!name || !this.el) return\n\n    this.el.className = name\n  }\n\n  /**\n   * 设置画笔模式为绘制模式\n   *\n   * @memberof DrawingBoard\n   */\n  setPenModePaint(): void {\n    this._setPenMode('paint')\n  }\n\n  /**\n   * 设置画笔模式为拖拽模式\n   *\n   * @memberof DrawingBoard\n   */\n  setPenModeDrag(): void {\n    this._setPenMode('drag')\n  }\n\n  /**\n   * 重置画笔模式为空\n   *\n   * @memberof DrawingBoard\n   */\n  setPenModeEmpty(): void {\n    this._setPenMode('empty')\n  }\n\n  /**\n   * 设置缩放比例\n   *\n   * @param {*} scale 缩放比例\n   * @memberof DrawingBoard\n   */\n  setScale(scale: any): void {\n    let s = parseFloat(scale)\n    if (isNaN(s) || s === this.scale) return\n\n    this.scale = this._getLawfulScale(scale)\n\n    this._handleScaleChange()\n  }\n\n  /**\n   * 挂载\n   * @returns void\n   */\n  mount(): void {\n    if (!this.el) this.el = this._makeCanvas()\n    if (!this.ctx) this.ctx = this._getCtx()\n\n    this._setDOMSize([this.width, this.height])\n    this.setClassName(this.className)\n\n    this._bindCurInteractiveModeEvents('start')\n\n    this.container.appendChild(this.el)\n  }\n\n  /**\n   * 销毁\n   *\n   * @memberof DrawingBoard\n   */\n  destory(): void {\n    this.el && this.container.removeChild(this.el)\n    this.el = null\n    this._bgImgObject = null\n  }\n\n  /**\n   * 清空绘制\n   * @returns void\n   */\n  clear(): void {\n    if (!this.ctx || !this.el) return\n\n    // 清空前保存状态\n    this._saveImageData('clear', this.paintCount, this.ctx.getImageData(0, 0, this.width, this.height))\n\n    this.ctx.clearRect(0, 0, this.width, this.height)\n\n    // 重置绘制次数\n    this.paintCount = 0\n\n    // 如果有背景图，则需要重新绘制背景图\n    this._bgImgObject && this._drawBg(this._bgImgObject, this.originalSize[0], this.originalSize[1])\n\n    console.log('clear paintCount', this.paintCount)\n  }\n\n  /**\n   * 旋转\n   *\n   * @param {number} [direction=1] 方向 1顺时针 -1逆时针\n   * @memberof DrawingBoard\n   */\n  rotate(direction = 1): void {\n    if (![1, -1].includes(direction)) return\n\n    this.bgImgRotate = this._getLawfulRotateAngle(this.bgImgRotate + direction * 90)\n\n    // 重设尺寸，旋转90度，宽高互换即可\n    this.setSize([this.height, this.width])\n\n    this._bgImgObject && this._drawBg(this._bgImgObject, this.originalSize[0], this.originalSize[1])\n\n    // 因为旋转操作不记录到撤销栈中\n    // 旋转时需要清空撤销栈并重置绘制数量，不然会导致撤销状态错误\n    this.paintCount = 0\n    this.revokeStack = []\n  }\n\n  /**\n   * 撤销\n   * @returns void\n   */\n  revoke(): void {\n    this._revoke()\n  }\n\n  /**\n   * 设置背景\n   *\n   * @param {(CanvasImageSource | string)} urlOrObject 需要绘制的图像对象(HTMLImageElement、SVGImageElement、HTMLVideoElement、HTMLCanvasElement、ImageBitmap、OffscreenCanvas)或图像url\n   * @param {number} originalWidth 原图像宽度。当无法从urlOrObject直接获取原始尺寸时需要手动提供原始尺寸\n   * @param {number} originalHeight 原图像高度\n   * @memberof DrawingBoard\n   */\n  setBgImg(urlOrObject: CanvasImageSource | string, originalWidth: number, originalHeight: number): void {\n    // TODO:此处可能需要保存状态\n    if (typeof urlOrObject === 'string') {\n      // 从url中获取图片对象\n      if (/^(http[s]?)|(data:image)/.test(urlOrObject)) {\n        getImageFromURL(urlOrObject)\n          .then(image => {\n            this._bgImgObject = image\n            this.originalSize = [originalWidth || image.width, originalHeight || image.height]\n\n            this._drawBg(image, this.originalSize[0], this.originalSize[1])\n          })\n          .catch(err => {\n            console.log(err)\n            this._bgImgObject = null\n          })\n      } else {\n        throw new Error(MSG_BG_URL_NOT_LAWFUL)\n      }\n    } else {\n      // 传入的是新图片对象\n      if (urlOrObject !== this._bgImgObject) this._bgImgObject = urlOrObject\n      this.originalSize = [originalWidth || this.width, originalHeight || this.height]\n\n      this._drawBg(urlOrObject, this.originalSize[0], this.originalSize[1])\n    }\n  }\n\n  /**\n   * scale + scaleStep\n   *\n   * @memberof DrawingBoard\n   */\n  makeScaleAdd(): void {\n    let newScale = this.scale + this.scaleStep\n    this.setScale(newScale)\n  }\n\n  /**\n   * scale - scaleStep\n   *\n   * @memberof DrawingBoard\n   */\n  makeScaleSubtract(): void {\n    const newScale = this.scale - this.scaleStep\n    this.setScale(newScale)\n  }\n\n  /**\n   * 重置缩放比例、位置\n   *\n   * @memberof DrawingBoard\n   */\n  reset(): void {\n    this.dragTransformX = this.dragTransformY = 0\n\n    this.scale = this.initialScale\n\n    this._setCanvasTransform(this.dragTransformX, this.dragTransformY, this.scale, this.scaleTransition)\n  }\n\n  /**\n   * 获取当前画面的绘制次数\n   *\n   * @returns {number} 绘制次数\n   * @memberof DrawingBoard\n   */\n  getPaintCount(): number {\n    return this.paintCount\n  }\n\n  /**\n   * 获取dataURL\n   *\n   * @param {IMG_TYPE} [type='png'] 图片类型\n   * @param {number} [compressRate=1] 压缩比率\n   * @returns dataURL\n   * @memberof DrawingBoard\n   */\n  getDataUrl(type: IMG_TYPE = 'png', compressRate = 1): string {\n    if (\n      !this.el ||\n      !DrawingBoard.IMG_TYPE_ENUM.includes(type) ||\n      typeof compressRate !== 'number' ||\n      isNaN(compressRate)\n    ) {\n      throw new Error(MSG_DATAURL_CANT_GEN)\n    }\n\n    if (compressRate < 0.3) compressRate = 0.3\n    if (compressRate > 1) compressRate = 1\n\n    // ! toDataURL不支持image/jpg类型，若不支持，其会转为image/png\n    // ! 在特定情况下，会使图片体积变大\n    // ! 正确的应该是image/jpeg\n    const resourceType = `image/${type === 'jpg' ? 'jpeg' : type}`\n\n    return this.el.toDataURL(resourceType, compressRate)\n  }\n\n  /**\n   * 获取Blob\n   *\n   * @param {IMG_TYPE} [type='png'] 图片类型\n   * @param {number} [compressRate=1] 压缩比率\n   * @returns {Promise<Blob>} 返回blob\n   * @memberof DrawingBoard\n   */\n  getBlob(type: IMG_TYPE = 'png', compressRate = 1): Promise<Blob> {\n    if (\n      !this.el ||\n      !DrawingBoard.IMG_TYPE_ENUM.includes(type) ||\n      typeof compressRate !== 'number' ||\n      isNaN(compressRate)\n    ) {\n      throw new Error(MSG_BLOB_CANT_GEN)\n    }\n\n    if (compressRate < 0.3) compressRate = 0.3\n    if (compressRate > 1) compressRate = 1\n\n    const resourceType = `image/${type}`\n\n    return new Promise((resolve, reject) => {\n      this.el &&\n        this.el.toBlob(\n          blob => {\n            if (blob != null) resolve(blob)\n          },\n          resourceType,\n          compressRate\n        )\n    })\n  }\n\n  /**\n   * 获取File\n   *\n   * @param {string} [name='drawingBoard'] 图片名称\n   * @param {IMG_TYPE} [type='png'] 图片类型\n   * @param {number} [compressRate=1] 压缩比率\n   * @returns {(Promise<File | IeCompatibleBlob>)} 返回FIle或IeCompatibleBlob\n   * @memberof DrawingBoard\n   */\n  getFile(name = 'drawingBoard', type: IMG_TYPE = 'png', compressRate = 1): Promise<File | IeCompatibleBlob> {\n    return this.getBlob(type, compressRate).then(blob => blob2File(blob, name))\n  }\n\n  /**\n   * 下载图片\n   *\n   * @param {IMG_TYPE} [type='png'] 图片类型\n   * @param {number} [compressRate=1] 压缩比率，默认原图输出\n   * @param {string} [name='drawing-board'] 图片名称\n   * @memberof DrawingBoard\n   */\n  download(type: IMG_TYPE = 'png', compressRate = 1, name = 'drawing-board'): void {\n    if (\n      !DrawingBoard.IMG_TYPE_ENUM.includes(type) ||\n      typeof compressRate !== 'number' ||\n      isNaN(compressRate)\n    ) {\n      return\n    }\n\n    if (compressRate < 0.3) compressRate = 0.3\n    if (compressRate > 1) compressRate = 1\n\n    const url = this.getDataUrl(type, compressRate)\n\n    if (url) {\n      let link: HTMLAnchorElement | null = document.createElement('a')\n      document.body.appendChild(link)\n      link.href = url\n      link.download = `${name}-${new Date().getTime()}`\n      link.target = '_blank'\n      link.click()\n\n      let timer: any = setTimeout(() => {\n        link && document.body.removeChild(link)\n        link = null\n\n        clearTimeout(timer)\n        timer = null\n      }, 200)\n    }\n  }\n}\n\nexport default DrawingBoard\n"]}