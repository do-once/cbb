{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.33.4",
    "schemaVersion": 1010,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@doonce/utils!",
  "docComment": "",
  "name": "@doonce/utils",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@doonce/utils!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!_atob:function(1)",
          "docComment": "/**\n * base64 -> string atob能够解码通过base-64编码的字符串数据\n *\n * @export\n *\n * @param s - 需要解码的base64字符串\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _atob(s: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "s",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "_atob"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!_btoa:function(1)",
          "docComment": "/**\n * string -> base64 btoa从二进制数据“字符串”创建一个base-64编码的ASCII字符串 实现参考 https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/Base64_encoding_and_decoding https://developer.mozilla.org/zh-CN/docs/Web/API/WindowBase64/btoa#Unicode_%E5%AD%97%E7%AC%A6%E4%B8%B2\n *\n * @export\n *\n * @param s - 需要编码的字符串\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function _btoa(s: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "s",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "_btoa"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!addClass:function(1)",
          "docComment": "/**\n * 添加样式类\n *\n * @param el - 元素\n *\n * @param className - 样式名\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", className: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "className",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "addClass"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!addStyle:function(1)",
          "docComment": "/**\n * 添加样式\n *\n * @param el - 元素\n *\n * @param styleObj - 样式obj\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function addStyle(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", styleObj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "styleObj",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "addStyle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!blob2DataURL:function(1)",
          "docComment": "/**\n * blob、file转 dataURL(base64)\n *\n * @export base64\n *\n * @param blobOrFile - \n *\n * @returns dataURL\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function blob2DataURL(blobOrFile: "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "blobOrFile",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "blob2DataURL"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!blob2File:function(1)",
          "docComment": "/**\n * blob转File\n *\n * @export File\n *\n * @param blob - blob\n *\n * @param name - filename\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function blob2File(blob: "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "blob",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "blob2File"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!blob2ObjectURL:function(1)",
          "docComment": "/**\n * blob、file 转ObjectURL\n *\n * @export ObjectURL\n *\n * @param blobOrFile - \n *\n * @returns ObjectURL\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function blob2ObjectURL(blobOrFile: "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "blobOrFile",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "blob2ObjectURL"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!caf:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "caf: "
            },
            {
              "kind": "Content",
              "text": "((handle: number) => void) & typeof "
            },
            {
              "kind": "Reference",
              "text": "cancelAnimationFrame",
              "canonicalReference": "!cancelAnimationFrame:function"
            }
          ],
          "fileUrlPath": "src/raf.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "caf",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!canSupportCssVar:var",
          "docComment": "/**\n * 判断是否支持css3 变量\n *\n * @export\n *\n * @returns 是否支持\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "canSupportCssVar: "
            },
            {
              "kind": "Content",
              "text": "{\n    (): boolean;\n    isSupport?: boolean;\n}"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "canSupportCssVar",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!chunk:function(1)",
          "docComment": "/**\n * 将一个数组按size拆分成多个数组的块，然后把这些块组成新的数组  @author cgh  @time 2018-04-09\n *\n * @param array - [description]\n *\n * @param size - [description]  @return {[type]} [返回一个新数组]\n *\n * @example\n *\n * chunk(['a', 'b', 'c', 'd'], 2); // => [['a', 'b'], ['c', 'd']]\n *\n * chunk(['a', 'b', 'c', 'd'], 3); // => [['a', 'b', 'c'], ['d']]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function chunk(array: "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", size: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "size",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "chunk"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!clearSelected:function(1)",
          "docComment": "/**\n * 清除所有选中\n *\n * @export\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clearSelected(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/select.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "clearSelected"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!combineURL:function(1)",
          "docComment": "/**\n * 拼接URL\n *\n * @export\n *\n * @param baseURL - 基础URL\n *\n * @param relativeURL - 相对URL\n *\n * @returns {string} 完整URL\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function combineURL(baseURL: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", relativeURL: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/url.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "baseURL",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "relativeURL",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "combineURL"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!copyTextToClipboard:function(1)",
          "docComment": "/**\n * 拷贝文本到剪切板中\n *\n * @export\n *\n * @param text - 需要复制的文本\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function copyTextToClipboard(text: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/copy.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "text",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "copyTextToClipboard"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!copyToClipboard:function(1)",
          "docComment": "/**\n * 复制到剪贴板\n *\n * @param str - 需要复制的字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function copyToClipboard(str: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "str",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "copyToClipboard"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!dataURL2Blob:function(1)",
          "docComment": "/**\n * dataURL(base64)转Blob\n *\n * @export Blob\n *\n * @param dataurl - dataURL字符串\n *\n * @returns Blob\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dataURL2Blob(dataurl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dataurl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "dataURL2Blob"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!dataURL2File:function(1)",
          "docComment": "/**\n * dataURL(base64)转File\n *\n * @export File\n *\n * @param dataurl - \n *\n * @param filename - \n *\n * @returns File\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dataURL2File(dataurl: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "dataurl",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "dataURL2File"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!dateFormat:function(1)",
          "docComment": "/**\n * dateFormat unix时间戳格式化\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dateFormat(timestamp: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", format?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "timestamp",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "format",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "dateFormat"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!debounce:function(1)",
          "docComment": "/**\n * 去抖函数 (underscore 1.8.2实现) http://www.css88.com/doc/underscore/docs/underscore.html 连续触发某一事件时，只在最后一次事件触发时的wait时间后才真正执行处理函数 场景：搜索建议（停止输入后再触发请求）\n *\n * @param func - 需要延迟的函数\n *\n * @param wait - 延迟时间\n *\n * @param immediate - 是否需要在第一次触发时立即执行func\n *\n * @returns {Function}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function debounce(func: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", wait: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", immediate: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => unknown"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "func",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "wait",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "immediate",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "debounce"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!easeIn:function(1)",
          "docComment": "/**\n * 先慢后快  @export\n *\n * @param t - 当前时间\n *\n * @param b - 开始值\n *\n * @param c - 变化值(结束值-开始值)\n *\n * @param d - 结束时间\n *\n * @returns {Number} 当前时间对应的值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function easeIn(t: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", d: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/easings.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "t",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "easeIn"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!easeInOut:function(1)",
          "docComment": "/**\n * 先慢再匀速再慢  @export\n *\n * @param t - 当前时间\n *\n * @param b - 开始值\n *\n * @param c - 变化值(结束值-开始值)\n *\n * @param d - 结束时间\n *\n * @returns {Number} 当前时间对应的值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function easeInOut(t: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", d: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/easings.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "t",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "easeInOut"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!easeOut:function(1)",
          "docComment": "/**\n * 先快后慢  @export\n *\n * @param t - 当前时间\n *\n * @param b - 开始值\n *\n * @param c - 变化值(结束值-开始值)\n *\n * @param d - 结束时间\n *\n * @returns {Number} 当前时间对应的值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function easeOut(t: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", d: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/easings.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "t",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "easeOut"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!escapeSvg:function(1)",
          "docComment": "/**\n * 安全转义svg字符串\n *\n * @export\n *\n * @param svg - svg字符串  @return {String} 转移后的svg字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function escapeSvg(svg: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "svg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "escapeSvg"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!eventListenerPassiveSupported:var",
          "docComment": "/**\n * 判断浏览器是否支持passive模式\n *\n * @date 2021-10-26 11:37:52  @export  @return {Boolean} 是否支持passive模式\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "eventListenerPassiveSupported: "
            },
            {
              "kind": "Content",
              "text": "{\n    (): boolean;\n    isSupportPassive?: boolean;\n}"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "eventListenerPassiveSupported",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!file2Blob:function(1)",
          "docComment": "/**\n * file转Blob\n *\n * @export\n *\n * @param file - file对象\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function file2Blob(file: "
            },
            {
              "kind": "Reference",
              "text": "Blob",
              "canonicalReference": "!Blob:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/file-convert.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "file",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "file2Blob"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!fixedDecimal:function(1)",
          "docComment": "/**\n * 保留位数\n *\n * @export\n *\n * @param originalNum - 原始值\n *\n * @param keepCount - 保留的位数，默认1\n *\n * @param round - 四舍五入，默认为true，否则直接截取\n *\n * @param keepNegativeZero - 是否保留负零，默认为false，不保留\n *\n * @returns {string} 调整后的数字字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function fixedDecimal(originalNum: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": ", keepCount?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", round?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ", keepNegativeZero?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "originalNum",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "keepCount",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "round",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            },
            {
              "parameterName": "keepNegativeZero",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "fixedDecimal"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!flatten:function(1)",
          "docComment": "/**\n * 扁平化\n *\n * @date 2023-02-10 17:07:41  @export  @template T 类型\n *\n * @param arr - 待转换数组\n *\n * @returns {Array} 转换后数组\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flatten<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "T[][]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "flatten"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!flattenDeep:function(1)",
          "docComment": "/**\n * 数组深度扁平化\n *\n * @param arr - 待转换数组\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function flattenDeep<T>(arr: "
            },
            {
              "kind": "Reference",
              "text": "NestedArray",
              "canonicalReference": "@doonce/utils!~NestedArray:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "flattenDeep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!genSvgText:function(1)",
          "docComment": "/**\n * 生成svg文本\n *\n * @export\n *\n * @param  - {*} [{ width = 300, height = 150, fontSize = 14, fontFamily = 'system-ui, sans-serif', color = '#a2a9b6', opacity = 1, x = 50, y = 50, content = 'svg测试文本', transform = 'rotate(0,0,0)' }={}]  @return {String} svg字符串（未转义）\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function genSvgText({ width, height, fontSize, fontFamily, color, opacity, x, y, content, rotate }?: "
            },
            {
              "kind": "Content",
              "text": "{\n    width?: number | undefined;\n    height?: number | undefined;\n    fontSize?: number | undefined;\n    fontFamily?: string | undefined;\n    color?: string | undefined;\n    opacity?: number | undefined;\n    x?: number | undefined;\n    y?: number | undefined;\n    content?: string | undefined;\n    rotate?: number | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ width, height, fontSize, fontFamily, color, opacity, x, y, content, rotate }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "genSvgText"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getData:function(1)",
          "docComment": "/**\n * 获取/设置data-*\n *\n * @param el - 元素\n *\n * @param name - 名称\n *\n * @param val - 需要设置的值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getData(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | void | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getData"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getGlobalThis:function(1)",
          "docComment": "/**\n * 返回全局上下文\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getGlobalThis(): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getGlobalThis"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getImgURLBlob:function(1)",
          "docComment": "/**\n * 从url中获取图片的流\n *\n * @param url - 图片url\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getImgURLBlob(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getImgURLBlob"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getOrigin:function(1)",
          "docComment": "/**\n * 获取origin origin = protocol + // + host host = hostname + port\n *\n * @export\n *\n * @returns origin字符串 例子:返回 https://xxx.abc.com:456\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getOrigin(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getOrigin"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getQueryObject:function(1)",
          "docComment": "/**\n * 解析查询字符串\n *\n * @param qs - 需要解析的查询字符串  @return {Object} 解析后的对象 http://www.domain.com/?user=anonymous&id=123&id=456&city=%E5%8C%97%E4%BA%AC&d&enabled 解析后: { user: 'anonymous', id: [123, 456], // 重复出现的 key 要组装成数组，能被转成数字的就转成数字类型 city: '北京', // 中文 enabled: true, // 未指定值的 key 约定值为 true d:true }\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getQueryObject(qs?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<string, unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/url.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "qs",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "getQueryObject"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getRandomInt:function(1)",
          "docComment": "/**\n * 取一个区间的随机整数\n *\n * @param min - 最小值\n *\n * @param max - 最大值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRandomInt(min: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", max: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "min",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "max",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getRandomInt"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getRect:function(1)",
          "docComment": "/**\n * 获取元素尺寸\n *\n * @param el - 元素\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getRect(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    top: number;\n    left: number;\n    width: number;\n    height: number;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getRect"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!getScrollbarWidth:var",
          "docComment": "/**\n * @author GuangHui  @description 获取scrollbar 宽度\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getScrollbarWidth: "
            },
            {
              "kind": "Content",
              "text": "{\n    (): number;\n    scrollBarWidth?: number;\n}"
            }
          ],
          "fileUrlPath": "src/scrollbar-width.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getScrollbarWidth",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!getStyle:function(1)",
          "docComment": "/**\n * 获取计算样式\n *\n * @param el - \n *\n * @returns {Object} 样式对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getStyle(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "CSSStyleDeclaration",
              "canonicalReference": "!CSSStyleDeclaration:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getStyle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!hasClass:function(1)",
          "docComment": "/**\n * 判断是否有样式类\n *\n * @param el - 元素\n *\n * @param className - 样式类\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hasClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", className: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "className",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "hasClass"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!inBrowser:var",
          "docComment": "/**\n * @author GuangHui  @description 浏览器判断\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "inBrowser: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "inBrowser",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isAbsoluteURL:function(1)",
          "docComment": "/**\n * 判断是否绝对路径\n *\n * @export\n *\n * @param url - 待判断url\n *\n * @returns {boolean} 是否绝对路径\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isAbsoluteURL(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/url.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isAbsoluteURL"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isAndroid:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isAndroid: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isAndroid",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isArray:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArray(arr: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isArrayLike:function(1)",
          "docComment": "/**\n * 判断是否为类数组\n *\n * @param collection - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArrayLike(collection: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "collection",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isArrayLike"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isChrome:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isChrome: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isChrome",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isEdge:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isEdge: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isEdge",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isEmpty:function(1)",
          "docComment": "/**\n * 判断是否为空（null、'',[],{},0）\n *\n * @export\n *\n * @param obj - 需要判断的对象\n *\n * @returns {Boolean} 是否为空\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEmpty(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isEmpty"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isEmptyArrOrObj:function(1)",
          "docComment": "/**\n * 判断数组或对象是否为空\n *\n * @param obj - \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEmptyArrOrObj(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isEmptyArrOrObj"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isFF:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isFF: "
            },
            {
              "kind": "Content",
              "text": "false | \"\" | "
            },
            {
              "kind": "Reference",
              "text": "RegExpMatchArray",
              "canonicalReference": "!RegExpMatchArray:interface"
            },
            {
              "kind": "Content",
              "text": " | null"
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isFF",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isFinite_2:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isFinite(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isFinite_2"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isFunction:function(1)",
          "docComment": "/**\n * 判断是否为函数\n *\n * @param fn - 需要判断的对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isFunction(fn: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/type-judge.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isFunction"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isIE:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIE: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIE",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isIE9:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIE9: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIE9",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isIOS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isIOS: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isIOS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!isPhantomJS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isPhantomJS: "
            },
            {
              "kind": "Content",
              "text": "boolean | \"\""
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isPhantomJS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!isURLSameOrigin:function(1)",
          "docComment": "/**\n * 判断是否同源URL\n *\n * @export\n *\n * @param requestURL - 请求URL\n *\n * @param requestURL2 - 需要对应请求URL2，默认当前域\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isURLSameOrigin(requestURL: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", requestURL2?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/url.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "requestURL",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "requestURL2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "isURLSameOrigin"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!Linear:function(1)",
          "docComment": "/**\n * 匀速  @export\n *\n * @param t - 当前时间\n *\n * @param b - 开始值\n *\n * @param c - 变化值(结束值-开始值)\n *\n * @param d - 结束时间\n *\n * @returns {Number} 当前时间对应的值\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function Linear(t: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", d: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/easings.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "t",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "Linear"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!loadCss:function(1)",
          "docComment": "/**\n * 加载css\n *\n * @export\n *\n * @param href - css地址\n *\n * @param options - 额外options  @return {Promise} promise实例\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadCss(href: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "{\n    rel: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "href",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "loadCss"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!loadJs:function(1)",
          "docComment": "/**\n * 加载js\n *\n * @export\n *\n * @param src - script地址\n *\n * @param options - 额外options  @return {Promise} promise实例\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadJs(src: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Content",
              "text": "{\n    type: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "src",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "loadJs"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!makePromiseTimeoutAutoCancel:function(1)",
          "docComment": "/**\n * 超时取消单个、多个promise执行\n *\n * @export\n *\n * @param timeout - 超时时间，单位毫秒\n *\n * @param msg - 超时提示\n *\n * @param promises - promise实例数组  @return {Promise} 一个超时自动取消的promise实例\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function makePromiseTimeoutAutoCancel(oneOrMorePromise: "
            },
            {
              "kind": "Reference",
              "text": "PromiseOrReturnAPromise",
              "canonicalReference": "@doonce/utils!~PromiseOrReturnAPromise:type"
            },
            {
              "kind": "Content",
              "text": "<unknown> | "
            },
            {
              "kind": "Reference",
              "text": "PromiseOrReturnAPromise",
              "canonicalReference": "@doonce/utils!~PromiseOrReturnAPromise:type"
            },
            {
              "kind": "Content",
              "text": "<unknown>[]"
            },
            {
              "kind": "Content",
              "text": ", timeout: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", msg?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<unknown>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 13
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "oneOrMorePromise",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "timeout",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "msg",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            }
          ],
          "name": "makePromiseTimeoutAutoCancel"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!makeSvgInline:function(1)",
          "docComment": "/**\n * 生成内联svg\n *\n * @export\n *\n * @param svg - 未转义的svg字符串  @return {String} 转义后的内联svg字符串 参考： https://www.zhangxinxu.com/wordpress/2020/10/text-as-css-background-image/ https://www.zhangxinxu.com/wordpress/2015/10/understand-svg-transform/ https://www.zhangxinxu.com/wordpress/2018/08/css-svg-background-image-base64-encode/\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function makeSvgInline(svg: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "svg",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "makeSvgInline"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!matches:function(1)",
          "docComment": "/**\n * 查看某元素是否命中css选择器字符串 https://developer.mozilla.org/zh-CN/docs/Web/API/Element/matches https://blog.csdn.net/king_xing/article/details/50460580\n *\n * @export\n *\n * @param el - 需要检测的el\n *\n * @param selector - css选择器字符串\n *\n * @returns 是否命中\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function matches(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", selector: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "selector",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "matches"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!ms2h:function(1)",
          "docComment": "/**\n * 毫秒转小时\n *\n * @export\n *\n * @param ms - 毫秒\n *\n * @returns 小时\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ms2h(ms: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ms",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ms2h"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!ms2hms:function(1)",
          "docComment": "/**\n * 毫秒转换为 时'分\"秒 形式\n *\n * @param num - 需要转换的数字\n *\n * @param sep - 主要分隔符；默认为'\n *\n * @param subSep - 次要分隔符；默认为\"\n *\n * @param needPadZero - 是否需要前补0；默认为true\n *\n * @param showH - 是否需要展示时；默认为true\n *\n * @param showM - 是否需要展示分；默认为true\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ms2hms({ num, sep, subSep, needPadZero, showH, showM }: "
            },
            {
              "kind": "Content",
              "text": "{\n    num: number | string;\n    sep: string;\n    subSep: string;\n    needPadZero: boolean;\n    showH: boolean;\n    showM: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ num, sep, subSep, needPadZero, showH, showM }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ms2hms"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!ms2m:function(1)",
          "docComment": "/**\n * 毫秒转分\n *\n * @export\n *\n * @param ms - 毫秒\n *\n * @returns 分\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ms2m(ms: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ms",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ms2m"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!ms2PrimeSymbol:function(1)",
          "docComment": "/**\n * 毫秒转角分符号形式 https://zh.wikipedia.org/wiki/角分符号 分′秒″\n *\n * @export\n *\n * @param num - 需要转换的数字\n *\n * @param primeSymbol - 角分符号；默认为′\n *\n * @param doublePrimeSymbol - 角秒符号；默认为″\n *\n * @param needPadZero - 是否需要前补0；默认为true\n *\n * @param showM - 是否需要展示分；默认为true\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ms2PrimeSymbol({ num, primeSymbol, doublePrimeSymbol, needPadZero, showM }: "
            },
            {
              "kind": "Content",
              "text": "{\n    num: number | string;\n    primeSymbol: string;\n    doublePrimeSymbol: string;\n    needPadZero: boolean;\n    showM: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ num, primeSymbol, doublePrimeSymbol, needPadZero, showM }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ms2PrimeSymbol"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!ms2s:function(1)",
          "docComment": "/**\n * 毫秒转秒\n *\n * @export\n *\n * @param ms - 毫秒\n *\n * @returns 秒\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ms2s(ms: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ms",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ms2s"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!num2percentage:function(1)",
          "docComment": "/**\n * 数字转百分比\n *\n * @param originalNum - 需要转换的数字\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function num2percentage(originalNum: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "originalNum",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "num2percentage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!openInNewTabWithNoopenerInSafari:function(1)",
          "docComment": "/**\n * 旧版本的Safari中,使用noopener打开一个新标签页 https://juejin.im/post/5ecfc6b5f265da76d53c0c91\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function openInNewTabWithNoopenerInSafari(href: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "href",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "openInNewTabWithNoopenerInSafari"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!openInNewTabWithoutOpener:function(1)",
          "docComment": "/**\n * 使用noopener打开一个新标签页 https://juejin.im/post/5ecfc6b5f265da76d53c0c91\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function openInNewTabWithoutOpener(href: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/browser.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "href",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "openInNewTabWithoutOpener"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!padZero:function(1)",
          "docComment": "/**\n * 前补0\n *\n * @export\n *\n * @param num - 数字\n *\n * @returns 补零后的字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function padZero(num: "
            },
            {
              "kind": "Content",
              "text": "number | string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "num",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "padZero"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!raf:var",
          "docComment": "/**\n * @author GuangHui  @description requestAnimationFrame\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "raf: "
            },
            {
              "kind": "Content",
              "text": "((callback: "
            },
            {
              "kind": "Reference",
              "text": "FrameRequestCallback",
              "canonicalReference": "!FrameRequestCallback:interface"
            },
            {
              "kind": "Content",
              "text": ") => number) & typeof "
            },
            {
              "kind": "Reference",
              "text": "requestAnimationFrame",
              "canonicalReference": "!requestAnimationFrame:function"
            }
          ],
          "fileUrlPath": "src/raf.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "raf",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!rafAnim:function(1)",
          "docComment": "/**\n * requestAnimationFrame动画  @export\n *\n * @param frameFn - 步进函数，需要返回一个布尔值\n *\n * @param context - frameFn的执行上下文\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function rafAnim(frameFn: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", context: "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/raf-animation.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "frameFn",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "context",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "rafAnim"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!removeClass:function(1)",
          "docComment": "/**\n * 移除样式类\n *\n * @param el - 元素\n *\n * @param className - 样式名\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function removeClass(el: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ", className: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "el",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "className",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "removeClass"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!replaceEmoji:var",
          "docComment": "/**\n * 替换emoji\n *\n * @param str - 原始字符串\n *\n * @param placeholder - 替换字符\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "replaceEmoji: "
            },
            {
              "kind": "Content",
              "text": "(str: string, placeholder?: string) => string"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "replaceEmoji",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!resolveURL:function(1)",
          "docComment": "/**\n * 从URL中解析出protocol、host\n *\n * @export\n *\n * @param url - 待解析的URL\n *\n * @returns {URLOrigin} 解析出的protocol、host对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resolveURL(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    protocol: string;\n    host: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/url.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "resolveURL"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!scrollToTop:function(1)",
          "docComment": "/**\n * 滚动html到顶部\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function scrollToTop(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "scrollToTop"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!select:function(1)",
          "docComment": "/**\n * 选中html元素中的文本\n *\n * @export\n *\n * @param element - 需要选中文本的元素节点\n *\n * @returns \n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function select(element: "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/select.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "select"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!shuffle:function(1)",
          "docComment": "/**\n * 随机打乱一个数组\n *\n * @param arr - \n *\n * @returns {Array}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function shuffle(arr: "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "never[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "shuffle"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!str2kebab:var",
          "docComment": "/**\n * 驼峰、帕斯卡转烤串\n *\n * @param str - camelCase、PascalCase字符串\n *\n * @returns {String} kebab-case字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "str2kebab: "
            },
            {
              "kind": "Content",
              "text": "(str: string) => string"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "str2kebab",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!supportWebp:function(1)",
          "docComment": "/**\n * 检查是否支持webp格式图片\n *\n * @export\n *\n * @returns 是否支持webp\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function supportWebp(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "supportWebp"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@doonce/utils!thousands:var",
          "docComment": "/**\n * 千分位处理 1000.123 -> 1,000.123\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "thousands: "
            },
            {
              "kind": "Content",
              "text": "(num: number) => string"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "thousands",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!throttle:function(1)",
          "docComment": "/**\n * 节流函数 (underscore 1.8.2实现) http://www.css88.com/doc/underscore/docs/underscore.html 连续触发某一事件时，会自动间隔wait时间去执行一次处理函数 wait时间内重复触发的事件会被忽略 节流会稀释函数的执行频率 场景：resize、scroll时并不需要如此密集的事件触发频率\n *\n * @param func - \n *\n * @param wait - \n *\n * @param options - \n *\n * @returns {Function}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function throttle(func: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", wait: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", options: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => unknown"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "func",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "wait",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "throttle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!timeChunk:function(1)",
          "docComment": "/**\n * 实现分时的函数，在intervalTime时间间隔内执行count次fn函数\n *\n * @param ary - 每次fn执行需要的参数数组\n *\n * @param fn - 处理函数\n *\n * @param count - 每个时间间隔内执行的次数\n *\n * @param interval - 时间间隔\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function timeChunk(ary: "
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", fn: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", count: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", interval: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ary",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "fn",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "count",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "interval",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "timeChunk"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!uuid:function(1)",
          "docComment": "/**\n * 生成唯一id uuid v4版本 UUID也是需要像身份证号一样事先制定一些简单的规则进去的，它的标准型式包含32个16进制数字，以连字号分为五段，表现形式为8-4-4-4-12的32个字符，如下所示 xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx 其中M与N都有特殊含义，M表示UUID版本，目前只有五个版本，即只会出现1，2，3，4，5，数字 N的一至三个最高有效位表示 UUID 变体，目前只会出现8，9，a，b四种情况。\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uuid(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/tools.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "uuid"
        },
        {
          "kind": "Function",
          "canonicalReference": "@doonce/utils!watermarkSvg:function(1)",
          "docComment": "/**\n * 生成水印svg(包含默认属性)\n *\n * @export\n *\n * @param params -  @return {String} 转义后的内联svg字符串\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function watermarkSvg(params?: "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "params",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "watermarkSvg"
        }
      ]
    }
  ]
}
