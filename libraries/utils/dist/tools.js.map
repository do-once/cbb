{"version":3,"file":"tools.js","sourceRoot":"","sources":["../src/tools.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description 常用js工具函数\n */\n\n/**\n * 矩形碰撞检测\n *\n * @date 2023-07-24 16:47:55\n * @export\n * @param rect1 矩形1\n * @param rect2 矩形2\n * @returns {boolean} 是否碰撞\n */\nexport function checkCollision(\n  rect1: { x: number; y: number; width: number; height: number },\n  rect2: { x: number; y: number; width: number; height: number }\n) {\n  if (\n    rect1.x < rect2.x + rect2.width &&\n    rect1.x + rect1.width > rect2.x &&\n    rect1.y < rect2.y + rect2.height &&\n    rect1.y + rect1.height > rect2.y\n  ) {\n    return true // 矩形发生碰撞\n  } else {\n    return false // 矩形未发生碰撞\n  }\n}\n\n/**\n * 取一个区间的随机整数\n * @param {Number} min 最小值\n * @param {Number} max 最大值\n */\nexport function getRandomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\n/**\n * 随机打乱一个数组\n * @param arr\n * @returns {Array}\n */\nexport function shuffle(arr: []) {\n  const _arr = arr.slice()\n  for (let i = 0; i < _arr.length; i++) {\n    const j = getRandomInt(0, i)\n    const t = _arr[i]\n    _arr[i] = _arr[j]\n    _arr[j] = t\n  }\n  return _arr\n}\n\n/**\n * 去抖函数\n * (underscore 1.8.2实现)\n * http://www.css88.com/doc/underscore/docs/underscore.html\n * 连续触发某一事件时，只在最后一次事件触发时的wait时间后才真正执行处理函数\n * 场景：搜索建议（停止输入后再触发请求）\n * @param   {Function}  func  需要延迟的函数\n * @param   {Number}    wait  延迟时间\n * @param   {Boolean}   immediate 是否需要在第一次触发时立即执行func\n * @returns {Function}\n */\nexport function debounce(func: any, wait: number, immediate: boolean) {\n  // @ts-ignore\n  var timeout: number, args, context, timestamp: number, result: unknown\n\n  var later = function () {\n    var last = new Date().getTime() - timestamp\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last)\n    } else {\n      timeout = null as unknown as number\n      if (!immediate) {\n        // @ts-ignore\n        result = func.apply(context, args)\n        if (!timeout) context = args = null\n      }\n    }\n  }\n\n  return function () {\n    // @ts-ignore\n    context = this\n    args = arguments\n    timestamp = new Date().getTime()\n    var callNow = immediate && !timeout\n    if (!timeout) timeout = setTimeout(later, wait)\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n\n    return result\n  }\n}\n\n/**\n * 节流函数\n * (underscore 1.8.2实现)\n * http://www.css88.com/doc/underscore/docs/underscore.html\n * 连续触发某一事件时，会自动间隔wait时间去执行一次处理函数\n * wait时间内重复触发的事件会被忽略\n * 节流会稀释函数的执行频率\n * 场景：resize、scroll时并不需要如此密集的事件触发频率\n * @param   {Function}  func\n * @param   {Number}    wait\n * @param   {Boolean}   options\n * @returns {Function}\n */\n// @ts-ignore\nexport function throttle(func: any, wait: number, options) {\n  // @ts-ignore\n  var context, args, result: unknown\n  var timeout: null | number = null\n  var previous = 0\n  if (!options) options = {}\n  var later = function () {\n    previous = options.leading === false ? 0 : new Date().getTime()\n    timeout = null\n    // @ts-ignore\n    result = func.apply(context, args)\n    if (!timeout) context = args = null\n  }\n  return function () {\n    var now = new Date().getTime()\n    if (!previous && options.leading === false) previous = now\n    var remaining = wait - (now - previous)\n    // @ts-ignore\n    context = this\n    args = arguments\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout)\n        timeout = null\n      }\n      previous = now\n      result = func.apply(context, args)\n      if (!timeout) context = args = null\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining)\n    }\n    return result\n  }\n}\n\n/**\n * 实现分时的函数，在intervalTime时间间隔内执行count次fn函数\n * @param {Array}     ary       每次fn执行需要的参数数组\n * @param {Function}  fn        处理函数\n * @param {Number}    count     每个时间间隔内执行的次数\n * @param {Number}    interval  时间间隔\n */\nexport function timeChunk(ary: [], fn: any, count: number, interval: number) {\n  var obj,\n    t: number,\n    len = ary.length,\n    intervalTime = interval || 200 // 默认时间间隔200ms\n  var start = function () {\n    for (var i = 0; i < Math.min(count || 1, len); i++) {\n      obj = ary.shift()\n      fn(obj)\n    }\n  }\n  return function () {\n    t = setInterval(function () {\n      if (ary.length === 0) {\n        return clearInterval(t)\n      }\n      start()\n    }, intervalTime)\n  }\n}\n\n/**\n * 将一个数组按size拆分成多个数组的块，然后把这些块组成新的数组\n * @author cgh\n * @time   2018-04-09\n * @param  {[type]}   array [description]\n * @param  {[type]}   size  [description]\n * @return {[type]}         [返回一个新数组]\n * @example\n *\n * chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nexport function chunk(array: [], size: number) {\n  const length = array.length ? array.length : 0\n  if (!length || !size) {\n    return []\n  }\n  let index = 0\n  let resIndex = 0\n  const result = new Array(Math.ceil(length / size))\n\n  while (index < length) {\n    result[resIndex++] = array.slice(index, (index += size))\n  }\n  return result\n}\n\n/**\n * dateFormat unix时间戳格式化\n */\nexport function dateFormat(timestamp: number, format = 'yyyy-MM-dd hh:mm:ss') {\n  timestamp = timestamp.toString().length === 13 ? timestamp : timestamp * 1000\n  const date = new Date(timestamp)\n  const args = {\n    'M+': date.getMonth() + 1,\n    'd+': date.getDate(),\n    'h+': date.getHours(),\n    'm+': date.getMinutes(),\n    's+': date.getSeconds()\n  }\n  if (/(y+)/.test(format)) {\n    format = format.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n  }\n  for (var i in args) {\n    // @ts-ignore\n    const n = args[i]\n    if (new RegExp('(' + i + ')').test(format)) {\n      format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? n : ('00' + n).substr(('' + n).length))\n    }\n  }\n  return format\n}\n\n/**\n * 判断浏览器是否支持passive模式\n *\n * @date 2021-10-26 11:37:52\n * @export\n * @return {Boolean} 是否支持passive模式\n */\nexport const eventListenerPassiveSupported: { (): boolean; isSupportPassive?: boolean } = () => {\n  if (typeof eventListenerPassiveSupported.isSupportPassive === 'boolean') {\n    return eventListenerPassiveSupported.isSupportPassive\n  }\n\n  let isSupportPassive = false\n  try {\n    const opts = Object.defineProperty({}, 'passive', {\n      // eslint-disable-next-line\n      get() {\n        isSupportPassive = true\n      }\n    })\n\n    window.addEventListener('test', () => {}, opts)\n    window.removeEventListener('test', () => {}, opts)\n  } catch (e) {\n    isSupportPassive = false\n  }\n\n  eventListenerPassiveSupported.isSupportPassive = isSupportPassive\n  return isSupportPassive\n}\n\n/**\n * 驼峰、帕斯卡转烤串\n * @param {String} str camelCase、PascalCase字符串\n * @returns {String} kebab-case字符串\n */\nexport const str2kebab = (str: string) => str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\n\n/**\n * 毫秒转秒\n *\n * @export\n * @param {number} ms 毫秒\n * @returns 秒\n */\nexport function ms2s(ms: number) {\n  return Math.floor(ms / 1000)\n}\n\n/**\n * 毫秒转分\n *\n * @export\n * @param {number} ms 毫秒\n * @returns 分\n */\nexport function ms2m(ms: number) {\n  return Math.floor(ms2s(ms) / 60)\n}\n\n/**\n * 毫秒转小时\n *\n * @export\n * @param {number} ms 毫秒\n * @returns 小时\n */\nexport function ms2h(ms: number) {\n  return Math.floor(ms2m(ms) / 60)\n}\n\n/**\n * 前补0\n *\n * @export\n * @param {number} num 数字\n * @returns 补零后的字符串\n */\nexport function padZero(num: number | string) {\n  const n = Math.abs(parseInt(num as string))\n  if (isNaN(n)) throw new Error('输入参数无法转换为整数')\n\n  return `${n < 10 ? '0' + n : n}`\n}\n\n/**\n * 毫秒转角分符号形式\n * https://zh.wikipedia.org/wiki/角分符号\n * 分′秒″\n *\n * @export\n * @param {Number|String} num 需要转换的数字\n * @param {String} primeSymbol 角分符号；默认为′\n * @param {String} doublePrimeSymbol 角秒符号；默认为″\n * @param {Boolean} needPadZero 是否需要前补0；默认为true\n * @param {Boolean} showM 是否需要展示分；默认为true\n */\nexport function ms2PrimeSymbol({\n  num,\n  primeSymbol = '′',\n  doublePrimeSymbol = '″',\n  needPadZero = true,\n  showM = true\n}: {\n  num: number | string\n  primeSymbol: string\n  doublePrimeSymbol: string\n  needPadZero: boolean\n  showM: boolean\n}) {\n  const n = Math.floor(num as number)\n\n  // null 会被floor函数转为0\n  if (isNaN(n) || n === 0) {\n    return needPadZero ? `00${doublePrimeSymbol}` : `0${doublePrimeSymbol}`\n  }\n\n  if (!showM) {\n    return needPadZero ? `${padZero(ms2s(n))}${doublePrimeSymbol}` : `${ms2s(n)}${doublePrimeSymbol}`\n  }\n\n  const m = ms2m(n)\n  const s = ms2s(n) % 60\n\n  return needPadZero\n    ? `${padZero(m)}${primeSymbol}${padZero(s)}${doublePrimeSymbol}`\n    : `${m}${primeSymbol}${s}${doublePrimeSymbol}`\n}\n\n/**\n * 毫秒转换为 时'分\"秒 形式\n * @param {Number|String} num 需要转换的数字\n * @param {String} sep 主要分隔符；默认为'\n * @param {String} subSep 次要分隔符；默认为\"\n * @param {Boolean} needPadZero 是否需要前补0；默认为true\n * @param {Boolean} showH 是否需要展示时；默认为true\n * @param {Boolean} showM 是否需要展示分；默认为true\n */\nexport function ms2hms({\n  num,\n  sep = \"'\",\n  subSep = '\"',\n  needPadZero = true,\n  showH = true,\n  showM = true\n}: {\n  num: number | string\n  sep: string\n  subSep: string\n  needPadZero: boolean\n  showH: boolean\n  showM: boolean\n}) {\n  const n = Math.floor(num as number)\n  // null 会被floor函数转为0\n  if (isNaN(n) || n === 0) return num\n\n  if (!showM) return needPadZero ? padZero(ms2s(n)) : n + ''\n\n  if (!showH) {\n    const m = ms2m(n)\n    const s = ms2s(n) % 60\n\n    return needPadZero ? `${padZero(m)}${subSep}${padZero(s)}` : `${m}${subSep}${s}`\n  } else {\n    const h = ms2h(n)\n    const m = ms2m(n) % 60\n    const s = ms2s(n) % 60\n\n    return needPadZero\n      ? `${padZero(h)}${sep}${padZero(m)}${subSep}${padZero(s)}`\n      : `${h}${sep}${m}${subSep}${s}`\n  }\n}\n\n/**\n * 保留位数\n *\n * @export\n * @param {*} originalNum 原始值\n * @param {number} [keepCount=1] 保留的位数，默认1\n * @param {boolean} [round=true] 四舍五入，默认为true，否则直接截取\n * @param {boolean} [keepNegativeZero=false] 是否保留负零，默认为false，不保留\n * @returns {string} 调整后的数字字符串\n */\nexport function fixedDecimal(\n  originalNum: number | string,\n  keepCount = 1,\n  round = true,\n  keepNegativeZero = false\n) {\n  const num = parseFloat(originalNum as string)\n  if (isNaN(num)) return originalNum\n\n  let numStr = ''\n  if (round) {\n    numStr = num.toFixed(keepCount)\n  } else {\n    const stringNum = num.toString()\n    let { 0: interget, 1: decimal = '' } = stringNum.split('.')\n\n    if (!keepCount) return interget\n\n    let decimalLen = decimal ? decimal.length : 0\n    if (decimalLen === keepCount) return stringNum\n\n    if (decimalLen > keepCount) return decimal.substring(0, keepCount)\n\n    while (decimalLen < keepCount) {\n      decimal = decimal + '0'\n      decimalLen++\n    }\n\n    numStr = `${interget}.${decimal}`\n  }\n\n  return !keepNegativeZero && parseFloat(numStr) === 0 && numStr.indexOf('-') === 0 ? numStr.slice(1) : numStr\n}\n\n/**\n * 数字转百分比\n * @param {Number|String} originalNum 需要转换的数字\n */\nexport function num2percentage(originalNum: number | string) {\n  const num = parseFloat(originalNum as string)\n  if (isNaN(num) || num > 1 || num < 0) return originalNum\n\n  return num * 100\n}\n\ntype NestedArray<T> = Array<NestedArray<T> | T>\n\n/**\n * 扁平化\n *\n * @date 2023-02-10 17:07:41\n * @export\n * @template T 类型\n * @param arr 待转换数组\n * @returns {Array} 转换后数组\n */\nexport function flatten<T>(arr: T[][]): T[] {\n  return ([] as T[]).concat(...arr)\n}\n\n/**\n * 数组深度扁平化\n * @param {Array} arr 待转换数组\n */\nexport function flattenDeep<T>(arr: NestedArray<T>): T[] {\n  return flatten(arr.map(x => (Array.isArray(x) ? flattenDeep(x) : [x])))\n}\n\n/**\n * 替换emoji\n * @param {String} str 原始字符串\n * @param {String} placeholder 替换字符\n */\nexport const replaceEmoji = (str: string, placeholder = '') =>\n  typeof str === 'string'\n    ? str.replace(\n        /(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|\\ud83c[\\ude32-\\ude3a]|\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])/g,\n        placeholder\n      )\n    : str\n\n/**\n * 从url中获取图片的流\n * @param {String} url 图片url\n */\nexport function getImgURLBlob(url: string) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n\n    xhr.open('GET', url, true)\n    xhr.responseType = 'blob'\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4 && xhr.status === 200) resolve(xhr.response)\n    }\n\n    xhr.onerror = reject\n\n    xhr.send()\n  })\n}\n\n/**\n * 生成唯一id uuid v4版本\n * UUID也是需要像身份证号一样事先制定一些简单的规则进去的，它的标准型式包含32个16进制数字，以连字号分为五段，表现形式为8-4-4-4-12的32个字符，如下所示\n * xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n * 其中M与N都有特殊含义，M表示UUID版本，目前只有五个版本，即只会出现1，2，3，4，5，数字 N的一至三个最高有效位表示 UUID 变体，目前只会出现8，9，a，b四种情况。\n */\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c === 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\n/**\n * 获取origin\n * origin = protocol + // + host\n * host = hostname + port\n *\n * @export\n * @returns origin字符串\n * 例子:返回 https://xxx.abc.com:456\n */\nexport function getOrigin() {\n  if (!window.location) return ''\n\n  const location = window.location\n\n  if (typeof location.origin === 'string') return location.origin\n\n  return `${location.protocol}//${location.host}`\n}\n\n/**\n * 返回全局上下文\n */\nexport function getGlobalThis() {\n  // eslint-disable-next-line\n  if (typeof globalThis !== 'undefined') return globalThis\n\n  if (typeof self !== 'undefined') return self\n\n  if (typeof window !== 'undefined') return window\n  // @ts-ignore\n  if (typeof global !== 'undefined') return global\n\n  throw new Error('unable to locate global object')\n}\n\n/**\n * 千分位处理\n * 1000.123 -> 1,000.123\n */\nexport const thousands = (num: number) => num.toString().replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, '$1,')\n\ntype ReturnAPromise<T> = () => Promise<T>\ntype PromiseOrReturnAPromise<T> = Promise<T> | ReturnAPromise<T>\n/**\n * 超时取消单个、多个promise执行\n *\n * @export\n * @param {Number} timeout 超时时间，单位毫秒\n * @param {String} [msg='timeout'] 超时提示\n * @param {Promise|Array<Promise>} promises promise实例数组\n * @return {Promise} 一个超时自动取消的promise实例\n */\nexport function makePromiseTimeoutAutoCancel(\n  oneOrMorePromise: PromiseOrReturnAPromise<unknown> | PromiseOrReturnAPromise<unknown>[],\n  timeout: number,\n  msg = 'timeout'\n) {\n  if (!oneOrMorePromise || (Array.isArray(oneOrMorePromise) && !oneOrMorePromise.length)) {\n    throw new Error('At least one promise is required')\n  }\n\n  const promises = Array.isArray(oneOrMorePromise) ? oneOrMorePromise : [oneOrMorePromise]\n\n  return () =>\n    Promise.race([\n      new Promise((resolve, reject) => {\n        let timer = setTimeout(() => {\n          reject(msg)\n\n          clearTimeout(timer)\n          timer = null as unknown as number\n        }, timeout)\n      }),\n      ...promises.map(p => {\n        return typeof p === 'function' ? p() : p\n      })\n    ])\n}\n"]}