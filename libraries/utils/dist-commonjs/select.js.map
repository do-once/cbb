{"version":3,"file":"select.js","sourceRoot":"","sources":["../src/select.ts"],"names":[],"mappings":";AAAA,cAAc;;;AAEd;;;GAGG;AAEH;;;;;;GAMG;AACH,SAAgB,MAAM,CAAC,OAAoB;IACzC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;IAE5C,IAAI,YAAY,CAAA;IAEhB,IAAI,OAAO,CAAC,QAAQ,KAAK,QAAQ,EAAE;QACjC,OAAO,CAAC,KAAK,EAAE,CAAA;QAEf,YAAY,GAAG,OAAO,CAAC,KAAK,CAAA;KAC7B;SAAM,IAAI,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,EAAE;QAC1E,MAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAA;QAEnD,IAAI,CAAC,UAAU;YAAE,OAAO,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAA;QAErD,OAAO,CAAC,MAAM,EAAE,CAAA;QAChB,OAAO,CAAC,iBAAiB,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;QAElD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;SACpC;QAED,YAAY,GAAG,OAAO,CAAC,KAAK,CAAA;KAC7B;SAAM;QACL,IAAI,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC;YAAE,OAAO,CAAC,KAAK,EAAE,CAAA;QAE5D,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAA;QACvC,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAA;QAEpC,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAA;QACjC,SAAS,CAAC,eAAe,EAAE,CAAA;QAC3B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAEzB,YAAY,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAA;KACpC;IAED,OAAO,YAAY,CAAA;AACrB,CAAC;AApCD,wBAoCC;AAED;;;;GAIG;AACH,SAAgB,aAAa;IAC3B,MAAM,CAAC,YAAY,EAAE,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC,eAAe,EAAE,CAAA;AAClE,CAAC;AAFD,sCAEC","sourcesContent":["// @ts-nocheck\n\n/**\n * @author GuangHui\n * @description 选中\n */\n\n/**\n * 选中html元素中的文本\n *\n * @export\n * @param {HTMLElement} element 需要选中文本的元素节点\n * @returns\n */\nexport function select(element: HTMLElement) {\n  if (!element) throw new Error('element为必填项')\n\n  let selectedText\n\n  if (element.nodeName === 'SELECT') {\n    element.focus()\n\n    selectedText = element.value\n  } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n    const isReadOnly = element.hasAttribute('readonly')\n\n    if (!isReadOnly) element.setAttribute('readonly', '')\n\n    element.select()\n    element.setSelectionRange(0, element.value.length)\n\n    if (!isReadOnly) {\n      element.removeAttribute('readonly')\n    }\n\n    selectedText = element.value\n  } else {\n    if (element.hasAttribute('contenteditable')) element.focus()\n\n    const selection = window.getSelection()\n    const range = document.createRange()\n\n    range.selectNodeContents(element)\n    selection.removeAllRanges()\n    selection.addRange(range)\n\n    selectedText = selection.toString()\n  }\n\n  return selectedText\n}\n\n/**\n * 清除所有选中\n *\n * @export\n */\nexport function clearSelected() {\n  window.getSelection() && window.getSelection().removeAllRanges()\n}\n"]}