{"version":3,"file":"Char.js","sourceRoot":"","sources":["../../../src/layout-item/text/Char.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAEH,OAAO,EAAE,cAAc,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAA;AAElE,OAAO,EAAE,IAAI,EAAE,kBAAkB,EAAyB,MAAM,SAAS,CAAA;AASzE,MAAM,OAAO,IAAK,SAAQ,IAAI;IAC5B,cAAc,GAAuB,kBAAkB,CAAC,IAAI,CAAA;IAC5D,YAAY,GAAY,KAAK,CAAA;IAE7B,UAAU,CAAwB;IAClC,OAAO,GAAwB,EAAE,CAAA;IAEjC,gBAAgB,CAAkB;IAClC,KAAK,GAAG,KAAK,CAAA;IAEb,KAAK,CAAe;IAEpB,YAAY,EAAE,UAAU,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAkB;QACxE,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAE5B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;QACxC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;QAEpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;QACtB,yBAAyB;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK;YAAE,OAAM;QAEtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAA,CAAC,2BAA2B;QAE1D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAEpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACzB,CAAC;IAED,WAAW;QACT,MAAM,WAAW,GAAG;YAClB,GAAG,IAAI,CAAC,gBAAgB;YACxB,UAAU,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,IAAI;SACpD,CAAA;QAED,MAAM,EAAE,KAAK,EAAE,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,WAAW,CAAC,CAAC,CAAA;QAE/E,OAAO;YACL,KAAK;YACL,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,UAAU;SACzC,CAAA;IACH,CAAC;CACF","sourcesContent":["/**\n * @author GuangHui\n * @description 字符\n */\n\nimport { getCssFontDesc, measureTextMetrics } from '@doonce/utils'\nimport { GlobalFontConfig } from '../../DoonceLayoutEngine'\nimport { Base, LayoutItemTypeEnum, IContent, ISize, IRow } from '../base'\n\nexport type CharCtrOptions = {\n  rawContent: IContent['rawContent'] /** 原始内容 */\n  globalFontConfig: GlobalFontConfig /** 字体设置项 */\n  debug?: boolean /** 调试 */\n  rowNo: IRow['rowNo']\n}\n\nexport class Char extends Base implements IContent, IRow {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.CHAR\n  canLineBreak: boolean = false\n\n  rawContent: IContent['rawContent']\n  content: IContent['content'] = ''\n\n  globalFontConfig: GlobalFontConfig\n  debug = false\n\n  rowNo: IRow['rowNo']\n\n  constructor({ rawContent, globalFontConfig, debug, rowNo }: CharCtrOptions) {\n    super()\n\n    this.rawContent = rawContent\n\n    this.globalFontConfig = globalFontConfig\n    this.debug = !!debug\n\n    this.rowNo = rowNo\n  }\n\n  async init(force = false) {\n    /** 已经初始化,并不是强制初始化,则跳过 */\n    if (this.initialized && !force) return\n\n    this.content = this.rawContent /** 单个字符的渲染内容和原始内容应该保持一致 */\n\n    const { width, height } = this.measureSize()\n    this.width = width\n    this.height = height\n\n    this.initialized = true\n  }\n\n  measureSize(): ISize {\n    const fontDescObj = {\n      ...this.globalFontConfig,\n      lineHeight: `${this.globalFontConfig.lineHeight}px`\n    }\n\n    const { width } = measureTextMetrics(this.content, getCssFontDesc(fontDescObj))\n\n    return {\n      width,\n      height: this.globalFontConfig.lineHeight\n    }\n  }\n}\n"]}