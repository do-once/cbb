{"version":3,"file":"Row.js","sourceRoot":"","sources":["../../src/layout-item/Row.ts"],"names":[],"mappings":"AAAA;;;GAGG;AAGH,OAAO,EAAE,IAAI,EAAuB,kBAAkB,EAAE,MAAM,QAAQ,CAAA;AActE,MAAM,OAAO,GAAI,SAAQ,IAAI;IAC3B,cAAc,GAAuB,kBAAkB,CAAC,GAAG,CAAA;IAC3D,YAAY,GAAY,KAAK,CAAA;IAE7B,KAAK,CAAe;IAEpB,MAAM,GAAe,EAAE,CAAA;IACvB,gBAAgB,CAAkB;IAElC,YAAY,EAAE,gBAAgB,EAAE,KAAK,EAAiB;QACpD,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,gBAAgB,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;QAE1F,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAA;QACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;IAED,IAAI,CAAC,KAAc;QACjB,yBAAyB;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK;YAAE,OAAM;QAEtC,cAAc;QACd,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAA;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACzB,CAAC;IAED,QAAQ,CAAC,KAAe;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACzB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CACvB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACX,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAA;YACtB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;YAEnE,OAAO,GAAG,CAAA;QACZ,CAAC,EACD,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CACxB,CAAA;IACH,CAAC;CACF","sourcesContent":["/**\n * @author GuangHui\n * @description 行\n */\n\nimport { GlobalFontConfig } from '../DoonceLayoutEngine'\nimport { Base, IChild, IRow, ISize, LayoutItemTypeEnum } from './base'\nimport { Char, Formula, ImgPlaceholder, CRLF } from './text'\n\nimport { RowLayoutItemGroup } from './RowLayoutItemGroup'\nimport { Img } from './img'\n\n/** 限制行的 child 类型 */\nexport type RowChild = Char | Formula | ImgPlaceholder | RowLayoutItemGroup | CRLF | Img\n\nexport type RowCtrOptions = {\n  globalFontConfig: GlobalFontConfig\n  rowNo: IRow['rowNo']\n}\n\nexport class Row extends Base implements IRow, IChild {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.ROW\n  canLineBreak: boolean = false\n\n  rowNo: IRow['rowNo']\n\n  childs: RowChild[] = []\n  globalFontConfig: GlobalFontConfig\n\n  constructor({ globalFontConfig, rowNo }: RowCtrOptions) {\n    super()\n\n    if (!globalFontConfig || !rowNo) throw new Error('globalFontConfig and rowNo is required')\n\n    this.globalFontConfig = globalFontConfig\n    this.rowNo = rowNo\n  }\n\n  init(force: boolean): void {\n    /** 已经初始化,并不是强制初始化,则跳过 */\n    if (this.initialized && !force) return\n\n    // TODO 需要优化实现\n    console.log('force :>> ', force)\n    this.initialized = true\n  }\n\n  addChild(child: RowChild) {\n    this.childs.push(child)\n  }\n\n  measureSize(): ISize {\n    return this.childs.reduce<ISize>(\n      (acc, cur) => {\n        acc.width += cur.width\n        acc.height = Math.max(this.globalFontConfig.lineHeight, cur.height)\n\n        return acc\n      },\n      { width: 0, height: 0 }\n    )\n  }\n}\n"]}