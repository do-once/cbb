{"version":3,"file":"RowLayoutItemGroup.js","sourceRoot":"","sources":["../../src/layout-item/RowLayoutItemGroup.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,iCAAsE;AAYtE,MAAa,kBAAmB,SAAQ,WAAI;IAC1C,cAAc,GAAuB,yBAAkB,CAAC,qBAAqB,CAAA;IAC7E,YAAY,GAAY,KAAK,CAAA;IAE7B,MAAM,CAAoD;IAE1D,KAAK,CAAe;IAEpB,YAAY,EAAE,MAAM,EAAE,KAAK,EAA6B;QACtD,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAA;QACpE,2BAA2B;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAEpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK;QACtB,yBAAyB;QACzB,IAAI,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK;YAAE,OAAM;QAEtC,6BAA6B;QAC7B,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;QAExB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAEpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAA;IACzB,CAAC;IAEO,KAAK,CAAC,WAAW;QACvB,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IACjE,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CACvB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACX,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAA;YACtB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;YAE7C,OAAO,GAAG,CAAA;QACZ,CAAC,EACD,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CACxB,CAAA;IACH,CAAC;CACF;AA/CD,gDA+CC","sourcesContent":["/**\n * @author GuangHui\n * @description 将参与行排版的 item 打成一个组,当成一个 item 参与排版(实现类似标点悬挂效果)\n */\n\nimport { Base, IChild, IRow, ISize, LayoutItemTypeEnum } from './base'\nimport { Img } from './img/Img'\nimport { Char, Formula } from './text'\n\n/** 限制下RowLayoutItemGroup的child 类型 */\nexport type RowLayoutItemGroupChild = Char | Formula | Img\n\nexport type RowLayoutItemGroupOptions = {\n  childs: [RowLayoutItemGroupChild, RowLayoutItemGroupChild]\n  rowNo: IRow['rowNo']\n}\n\nexport class RowLayoutItemGroup extends Base implements IChild, IRow {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.ROW_LAYOUT_ITEM_GROUP\n  canLineBreak: boolean = false\n\n  childs: [RowLayoutItemGroupChild, RowLayoutItemGroupChild]\n\n  rowNo: IRow['rowNo']\n\n  constructor({ childs, rowNo }: RowLayoutItemGroupOptions) {\n    super()\n\n    if (!childs || !childs.length) throw new Error('childs is required')\n    /** child 的坐标是相对 group 的 */\n    this.childs = childs\n\n    this.rowNo = rowNo\n  }\n\n  async init(force = false) {\n    /** 已经初始化,并不是强制初始化,则跳过 */\n    if (this.initialized && !force) return\n\n    /** 初始化所有 child 后,才能拿到尺寸信息 */\n    await this._initChilds()\n\n    const { width, height } = this.measureSize()\n    this.width = width\n    this.height = height\n\n    this.initialized = true\n  }\n\n  private async _initChilds() {\n    await Promise.all(this.childs.map(instance => instance.init()))\n  }\n\n  measureSize(): ISize {\n    return this.childs.reduce<ISize>(\n      (acc, cur) => {\n        acc.width += cur.width\n        acc.height = Math.max(acc.height, cur.height)\n\n        return acc\n      },\n      { width: 0, height: 0 }\n    )\n  }\n}\n"]}