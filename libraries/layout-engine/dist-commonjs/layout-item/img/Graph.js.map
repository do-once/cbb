{"version":3,"file":"Graph.js","sourceRoot":"","sources":["../../../src/layout-item/img/Graph.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,kCAA+D;AAE/D,MAAa,KAAM,SAAQ,WAAI;IAC7B,cAAc,GAAG,yBAAkB,CAAC,KAAK,CAAA;IACzC,YAAY,GAAG,KAAK,CAAA;IAEpB,GAAG,CAAQ;IAEX,YAAY,GAAW;QACrB,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,GAAG;YAAE,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAE5C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;IAChB,CAAC;IAED,MAAM;QACJ,OAAO;YACL,CAAC,EAAE,IAAI,CAAC,CAAC;YACT,CAAC,EAAE,IAAI,CAAC,CAAC;SACV,CAAA;IACH,CAAC;IAED,KAAK,CAAC,OAAO;QACX,iBAAiB;QACjB,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,IAAI;gBACF,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAA;gBAElD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;gBAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;aACrB;YAAC,OAAO,KAAK,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,0BAA0B,EAAE,KAAK,CAAC,CAAA;aAC1D;SACF;QAED,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAA;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,MAAM,GAAG,GAAG,IAAI,KAAK,EAAE,CAAA;YACvB,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;YAElB,GAAG,CAAC,MAAM,GAAG,GAAG,EAAE;gBAChB,OAAO,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC,CAAA;YACnD,CAAC,CAAA;YAED,GAAG,CAAC,OAAO,GAAG,MAAM,CAAA;QACtB,CAAC,CAAC,CAAA;IACJ,CAAC;CACF;AApDD,sBAoDC","sourcesContent":["/**\n * @author GuangHui\n * @description 图片类\n */\n\nimport { Base, IPos, ISize, LayoutItemTypeEnum } from '../base'\n\nexport class Graph extends Base {\n  layoutItemType = LayoutItemTypeEnum.GRAPH\n  canLineBreak = false\n\n  src: string\n\n  constructor(src: string) {\n    super()\n\n    if (!src) throw new Error('src is required')\n\n    this.src = src\n  }\n\n  getPos(): IPos {\n    return {\n      x: this.x,\n      y: this.y\n    }\n  }\n\n  async getSize(): Promise<ISize> {\n    /** 未获取过,则尝试获取 */\n    if (this.width < 0 || this.height < 0) {\n      try {\n        const { width, height } = await this.measureSize()\n\n        this.width = width\n        this.height = height\n      } catch (error) {\n        console.log(`${this.src} getSize faild because: `, error)\n      }\n    }\n\n    return {\n      width: this.width,\n      height: this.height\n    }\n  }\n\n  async measureSize(): Promise<ISize> {\n    return new Promise((resolve, reject) => {\n      const img = new Image()\n      img.src = this.src\n\n      img.onload = () => {\n        resolve({ width: img.width, height: img.height })\n      }\n\n      img.onerror = reject\n    })\n  }\n}\n"]}