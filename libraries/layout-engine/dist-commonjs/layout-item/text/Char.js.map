{"version":3,"file":"Char.js","sourceRoot":"","sources":["../../../src/layout-item/text/Char.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,yCAAkE;AAElE,kCAAiF;AAQjF,MAAa,IAAK,SAAQ,WAAI;IAC5B,cAAc,GAAuB,yBAAkB,CAAC,IAAI,CAAA;IAC5D,YAAY,GAAY,KAAK,CAAA;IAE7B,UAAU,CAAQ;IAClB,OAAO,GAAW,EAAE,CAAA;IAEpB,iBAAiB,CAAmB;IACpC,KAAK,GAAG,KAAK,CAAA;IAEb,YAAY,EAAE,UAAU,EAAE,iBAAiB,EAAE,KAAK,EAAiB;QACjE,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAE5B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAC1C,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAA;IACtB,CAAC;IAED,KAAK,CAAC,IAAI;QACR,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAA,CAAC,2BAA2B;QAE1D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,EAAE,CAAA;QAC5C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAED,WAAW;QACT,MAAM,WAAW,GAAG;YAClB,GAAG,IAAI,CAAC,iBAAiB;YACzB,UAAU,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,IAAI;SACrD,CAAA;QAED,MAAM,EAAE,KAAK,EAAE,GAAG,IAAA,0BAAkB,EAAC,IAAI,CAAC,OAAO,EAAE,IAAA,sBAAc,EAAC,WAAW,CAAC,CAAC,CAAA;QAE/E,OAAO;YACL,KAAK;YACL,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,UAAU;SAC1C,CAAA;IACH,CAAC;CACF;AAxCD,oBAwCC","sourcesContent":["/**\n * @author GuangHui\n * @description 单字符\n */\n\nimport { getCssFontDesc, measureTextMetrics } from '@doonce/utils'\nimport { GlobalFontOptions } from '../../DoonceLayoutEngine'\nimport { Base, LayoutItemTypeEnum, IContent, IPos, ISize, ICache } from '../base'\n\nexport type CharCtrParams = {\n  rawContent: string /** 原始内容 */\n  globalFontOptions: GlobalFontOptions /** 字体设置项 */\n  debug?: boolean /** 调试 */\n}\n\nexport class Char extends Base implements IContent {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.CHAR\n  canLineBreak: boolean = false\n\n  rawContent: string\n  content: string = ''\n\n  globalFontOptions: GlobalFontOptions\n  debug = false\n\n  constructor({ rawContent, globalFontOptions, debug }: CharCtrParams) {\n    super()\n\n    this.rawContent = rawContent\n\n    this.globalFontOptions = globalFontOptions\n    this.debug = !!debug\n  }\n\n  async init() {\n    this.content = this.rawContent /** 单个字符的渲染内容和原始内容应该保持一致 */\n\n    const { width, height } = this.measureSize()\n    this.width = width\n    this.height = height\n  }\n\n  measureSize(): ISize {\n    const fontDescObj = {\n      ...this.globalFontOptions,\n      lineHeight: `${this.globalFontOptions.lineHeight}px`\n    }\n\n    const { width } = measureTextMetrics(this.content, getCssFontDesc(fontDescObj))\n\n    return {\n      width,\n      height: this.globalFontOptions.lineHeight\n    }\n  }\n}\n"]}