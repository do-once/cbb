{"version":3,"file":"Formula.js","sourceRoot":"","sources":["../../../src/layout-item/text/Formula.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description 公式\n */\n\nimport { transformLatexToSVGStrAndDataUrl } from '@doonce/latex-svg-dataurl'\nimport { getCssFontDesc, measureImgSize } from '@doonce/utils'\n\nimport { GlobalFontOptions } from '../../DoonceLayoutEngine'\nimport { Base, IContent, ISize, LayoutItemTypeEnum } from '../base'\n\nexport enum FormulaRenderTypeEnum {\n  SVG = 'SVG',\n  IMG = 'IMG'\n}\n\nexport type FormulaCtrParams = {\n  rawContent: string /** 公式原始内容 */\n  globalFontOptions: GlobalFontOptions /** 字体设置项 */\n  formulaRenderType: FormulaRenderTypeEnum /** 公式渲染类型,SVG(dom 节点) 或 IMG */\n  debug?: boolean /** 调试 */\n}\n\nexport class Formula extends Base implements IContent {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.FORMULA\n  canLineBreak: boolean = false\n\n  rawContent: string\n  content: string = ''\n\n  /** 公式转换成的 svg 用什么方式渲染,svg 节点插入还是图片展示 */\n  formulaRenderType: FormulaRenderTypeEnum\n  globalFontOptions: GlobalFontOptions\n  debug: boolean\n\n  svgEl: SVGSVGElement = null as unknown as SVGSVGElement\n\n  constructor({ rawContent, globalFontOptions, formulaRenderType, debug }: FormulaCtrParams) {\n    super()\n\n    if (!rawContent || !globalFontOptions || !formulaRenderType)\n      throw new Error('rawContent globalFontOptions and formulaRenderType is required')\n\n    this.rawContent = rawContent\n    this.globalFontOptions = globalFontOptions\n    this.formulaRenderType = formulaRenderType\n    this.debug = debug ?? false\n  }\n\n  async init() {\n    const { svgStr, dataUrl } = await this.getSvgStrAndDataUrl()\n    if (this.debug) {\n      console.group(`rawContent: ${this.rawContent}`)\n      console.log('svgStr :>> ', svgStr)\n      console.log('dataUrl :>> ', dataUrl)\n      console.groupEnd()\n    }\n\n    /** 手动指定 img 渲染方式 */\n    if (this.formulaRenderType === FormulaRenderTypeEnum.IMG) {\n      this.content = dataUrl\n    } else {\n      const svgEl = this.parse2SvgEl(svgStr)\n\n      if (svgEl) {\n        /** svg 支持 */\n        this.content = svgStr\n        this.svgEl = svgEl\n      } else {\n        // ? 兜底是否合适?如果不能反序列化为 svg 节点,那 mathjax 渲染为svg 就应该有问题了\n        // ? 此处值得再考虑下\n        /**  svg 不支持,兜底使用图片形式渲染 */\n        this.formulaRenderType = FormulaRenderTypeEnum.IMG\n        this.content = dataUrl\n      }\n    }\n\n    const { width, height } = await this.measureSize()\n    this.width = width\n    this.height = height\n  }\n\n  async getSvgStrAndDataUrl() {\n    return await transformLatexToSVGStrAndDataUrl({ latex: this.rawContent })\n  }\n\n  parse2SvgEl(svgStr: string) {\n    const doc = new DOMParser().parseFromString(svgStr, 'image/svg+xml')\n    return doc.querySelector('svg')\n  }\n\n  async measureSize(): Promise<ISize> {\n    const { width, height } =\n      this.formulaRenderType === FormulaRenderTypeEnum.SVG\n        ? this.measureSizeWithSvgEl(this.svgEl, this.globalFontOptions)\n        : await this.measureSizeWithSvgDataUrl(this.content)\n\n    return { width, height }\n  }\n\n  measureSizeWithSvgEl(svgEl: SVGSVGElement, globalFontOptions: GlobalFontOptions): ISize {\n    if (!svgEl) throw new Error('svgEl is required')\n\n    let frag = document.createDocumentFragment()\n    let div = document.createElement('div')\n\n    /** 设置字体 */\n    div.style.cssText = `font:${getCssFontDesc({\n      ...globalFontOptions,\n      lineHeight: globalFontOptions.lineHeight + 'px'\n    })};visibility: hidden;position: absolute;left: -100vw;`\n\n    div.appendChild(svgEl)\n    frag.appendChild(div)\n    document.body.appendChild(frag)\n\n    const { width, height } = svgEl.getBoundingClientRect()\n\n    document.body.removeChild(div)\n\n    return { width, height }\n  }\n\n  async measureSizeWithSvgDataUrl(svgDataUrl: string): Promise<ISize> {\n    return await measureImgSize(svgDataUrl)\n  }\n}\n"]}