{"version":3,"file":"Row.js","sourceRoot":"","sources":["../../src/layout-item/Row.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAGH,iCAAsE;AAYtE,MAAa,GAAI,SAAQ,WAAI;IAC3B,cAAc,GAAuB,yBAAkB,CAAC,GAAG,CAAA;IAC3D,YAAY,GAAY,KAAK,CAAA;IAE7B,KAAK,GAAW,CAAC,CAAC,CAAA;IAClB,MAAM,GAAW,CAAC,CAAA;IAElB,MAAM,GAAe,EAAE,CAAA;IACvB,iBAAiB,CAAmB;IAEpC,YAAY,EAAE,iBAAiB,EAAE,KAAK,EAAE,MAAM,EAAiB;QAC7D,KAAK,EAAE,CAAA;QAEP,IAAI,CAAC,iBAAiB,IAAI,CAAC,KAAK;YAAE,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAA;QAE5F,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAC1C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAA;IAC3B,CAAC;IAED,QAAQ,CAAC,KAAe;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACzB,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CACvB,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;YACX,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,CAAA;YACtB,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;YAEpE,OAAO,GAAG,CAAA;QACZ,CAAC,EACD,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CACxB,CAAA;IACH,CAAC;CACF;AAnCD,kBAmCC","sourcesContent":["/**\n * @author GuangHui\n * @description 行\n */\n\nimport { GlobalFontOptions } from '../DoonceLayoutEngine'\nimport { Base, IChild, IRow, ISize, LayoutItemTypeEnum } from './base'\nimport { Char, Formula, ImgPlaceholder, TextGroup } from './text'\n\n/** 限制行的 child 类型 */\nexport type RowChild = Char | Formula | ImgPlaceholder | TextGroup\n\nexport type RowCtrOptions = {\n  globalFontOptions: GlobalFontOptions\n  rowNo: number\n  indent?: number\n}\n\nexport class Row extends Base implements IRow, IChild {\n  layoutItemType: LayoutItemTypeEnum = LayoutItemTypeEnum.ROW\n  canLineBreak: boolean = false\n\n  rowNo: number = -1\n  indent: number = 0\n\n  childs: RowChild[] = []\n  globalFontOptions: GlobalFontOptions\n\n  constructor({ globalFontOptions, rowNo, indent }: RowCtrOptions) {\n    super()\n\n    if (!globalFontOptions || !rowNo) throw new Error('globalFontOptions and rowNo is required')\n\n    this.globalFontOptions = globalFontOptions\n    this.rowNo = rowNo\n    this.indent = indent ?? 0\n  }\n\n  addChild(child: RowChild) {\n    this.childs.push(child)\n  }\n\n  measureSize(): ISize {\n    return this.childs.reduce<ISize>(\n      (acc, cur) => {\n        acc.width += cur.width\n        acc.height = Math.max(this.globalFontOptions.lineHeight, cur.height)\n\n        return acc\n      },\n      { width: 0, height: 0 }\n    )\n  }\n}\n"]}