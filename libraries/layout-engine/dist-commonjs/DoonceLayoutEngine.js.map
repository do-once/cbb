{"version":3,"file":"DoonceLayoutEngine.js","sourceRoot":"","sources":["../src/DoonceLayoutEngine.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;AAEH,yCAAwC;AAsBxC,MAAa,kBAAkB;IAC7B,iBAAiB,CAAmB;IACpC,IAAI,GAAa,IAA2B,CAAA;IAE5C,YAAY,EAAE,iBAAiB,KAAK,EAAkC;QACpE,IAAI,CAAC,iBAAiB;YAAE,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;QAExE,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAA;QAE1C,IAAI,CAAC,KAAK,EAAE,CAAA;IACd,CAAC;IAEO,KAAK,CAAC,KAAK;QACjB,iBAAiB;QACjB,CAAC,IAAI,CAAC,IAAI;YACR,CAAC,IAAI,CAAC,IAAI,GAAG,MAAM,IAAA,gBAAQ,EAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAA;QAEhG,kBAAkB;QAClB,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,QAAQ,IAAI,CAAC,iBAAiB,CAAC,UAAU,aAAa,CAAC,CAAA;IACnG,CAAC;IAEM,MAAM,CAAC,YAAgC;QAC5C,IAAI,CAAC,YAAY;YAAE,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;IAChE,CAAC;IAED;;;;;;;;OAQG;IACI,YAAY;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAA;IACtC,CAAC;CACF;AArCD,gDAqCC","sourcesContent":["/**\n * @author GuangHui\n * @description DoonceLayoutEngine 主体程序\n */\n\nimport { loadFont } from '@doonce/utils'\n\nexport type GlobalFontOptions = {\n  fontSize: number /** 单位px */\n  fontFamily: string\n  lineHeight: number /** 单位px */\n  fontStyle: string\n  fontWeight: string\n  fontVariant: string\n  source: string\n}\n\nexport type DoonceLayoutEngineCtrOptions = {\n  globalFontOptions?: GlobalFontOptions\n}\n\nexport type LayoutMethodParams = {\n  maxWidth: number\n  padding?: [number, number, number, number] /** 上右下左 padding */\n  letterSpacing?: number /** 字符间距 */\n}\n\nexport class DoonceLayoutEngine {\n  globalFontOptions: GlobalFontOptions\n  font: FontFace = null as unknown as FontFace\n\n  constructor({ globalFontOptions } = {} as DoonceLayoutEngineCtrOptions) {\n    if (!globalFontOptions) throw new Error('globalFontOptions is required')\n\n    this.globalFontOptions = globalFontOptions\n\n    this._init()\n  }\n\n  private async _init() {\n    /** 字体不存在,则先加载 */\n    !this.font &&\n      (this.font = await loadFont(this.globalFontOptions.fontFamily, this.globalFontOptions.source))\n\n    /** 字体加载失败,阻塞流程 */\n    if (!this.isFontLoaded()) throw new Error(`font ${this.globalFontOptions.fontFamily} load faild`)\n  }\n\n  public layout(layoutParams: LayoutMethodParams) {\n    if (!layoutParams) throw new Error('layoutParams is required')\n  }\n\n  /**\n   * 检查字体是否加载完成\n   * 参考:https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check#fonts_that_have_loaded\n   * 使用document.fonts.check()存在误检测,参考:https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check#nonexistent_fonts\n   *\n   * @date 2023-07-18 00:33:12\n   * @returns {boolean} 是否加载\n   * @memberof DoonceLayoutEngine\n   */\n  public isFontLoaded() {\n    return this.font.status === 'loaded'\n  }\n}\n"]}