{"version":3,"file":"DoonceLayoutEngine.js","sourceRoot":"","sources":["../src/DoonceLayoutEngine.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description DoonceLayoutEngine 主体程序\n */\n\nimport { loadFont, checkCollision } from '@doonce/utils'\nimport {\n  Char,\n  Formula,\n  ImgPlaceholder,\n  ImgSurrounTypeEnum,\n  LayoutItemTypeEnum,\n  Row,\n  RowChild,\n  CRLF,\n  Img\n} from './layout-item'\nimport { RowLayoutItemGroup } from './layout-item/RowLayoutItemGroup'\n\n/** 参考https://developer.mozilla.org/zh-CN/docs/Web/CSS/font */\nexport type GlobalFontConfig = {\n  fontSize: number /** 单位px */\n  fontFamily: string\n  lineHeight: number /** 单位px */\n  fontStyle: string\n  fontWeight: string\n  fontVariant: string\n  source: string\n}\n\n/** 限制参与行布局的实例 */\nexport type InputRowLayoutItemInstance = Char | Formula | Img | RowLayoutItemGroup | CRLF\n\n/** 限制参与图片布局的实例 */\nexport type InputImgLayouItemInstance = Img\n\nexport type DoonceLayoutEngineCtrOptions = {\n  globalFontConfig: GlobalFontConfig /** 字体 */\n  inputRowLayoutItemInstanceList: InputRowLayoutItemInstance[] /** 用户传入的参与行布局的实例 */\n  inputImgLayoutItemInstanceList: InputImgLayouItemInstance[] /** 用户传入的参与图片布局的实例 */\n  debug?: boolean\n}\n\n/** 布局方法参数 */\nexport type LayoutMethodParams = {\n  maxWidth: number /** 单位px */\n}\n\n/** 布局方法返回值 */\nexport type LayoutMethodRet = {\n  rowList: Row[]\n  imgList: Img[]\n}\n\nexport class DoonceLayoutEngine {\n  globalFontConfig: GlobalFontConfig\n  font: FontFace = null as unknown as FontFace\n\n  inputRowLayoutItemInstanceList: InputRowLayoutItemInstance[]\n  inputImgLayoutItemInstanceList: InputImgLayouItemInstance[]\n\n  debug: boolean\n\n  constructor({\n    globalFontConfig,\n    inputRowLayoutItemInstanceList,\n    inputImgLayoutItemInstanceList,\n    debug\n  }: DoonceLayoutEngineCtrOptions) {\n    if (!globalFontConfig) throw new Error('globalFontConfig is required')\n    if (\n      (!inputRowLayoutItemInstanceList || !inputRowLayoutItemInstanceList.length) &&\n      (!inputImgLayoutItemInstanceList || !inputImgLayoutItemInstanceList.length)\n    )\n      throw new Error(\n        'inputRowLayoutItemInstanceList and inputImgLayoutItemInstanceList is required at least one'\n      )\n\n    this.globalFontConfig = globalFontConfig\n\n    this.inputRowLayoutItemInstanceList = inputRowLayoutItemInstanceList\n    this.inputImgLayoutItemInstanceList = inputImgLayoutItemInstanceList\n\n    this.debug = !!debug\n  }\n\n  async init() {\n    /** 字体不存在,则先加载 */\n    !this.font && (this.font = await loadFont(this.globalFontConfig.fontFamily, this.globalFontConfig.source))\n\n    /** 字体加载失败,阻塞流程 */\n    if (!this.isFontLoaded()) throw new Error(`font ${this.globalFontConfig.fontFamily} load faild`)\n\n    /** 等待实例初始化尺寸和 content 结束 */\n    await Promise.all([\n      ...this.inputRowLayoutItemInstanceList.map(instance => instance.init()),\n      ...this.inputImgLayoutItemInstanceList.map(instance => instance.init())\n    ])\n\n    this.debug &&\n      console.log('this.inputRowLayoutItemInstanceList after init :>> ', this.inputRowLayoutItemInstanceList)\n    this.debug &&\n      console.log('this.inputImgLayoutItemInstanceList after init :>> ', this.inputImgLayoutItemInstanceList)\n  }\n\n  /**\n   * 布局\n   *\n   * @date 2023-08-01 10:40:15\n   * @param { maxWidth } 容器宽度\n   * @returns {LayoutMethodRet} 布局对象\n   * @memberof DoonceLayoutEngine\n   */\n  public layout({ maxWidth }: LayoutMethodParams): LayoutMethodRet {\n    if (!maxWidth) throw new Error('maxWidth is required')\n\n    /** 存在图片 */\n    if (this.inputImgLayoutItemInstanceList && this.inputImgLayoutItemInstanceList.length) {\n      return this._layoutWithImg({\n        img: this.inputImgLayoutItemInstanceList[0] /** 暂只考虑只有一张图的场景 */,\n        maxWidth\n      })\n    } else {\n      return this._layoutWithNoneImg({ maxWidth })\n    }\n  }\n\n  /**\n   * 包含图片的图文混排方法\n   *\n   * @date 2023-08-01 16:57:18\n   * @private\n   * @param { img, maxWidth } Img实例,容器宽度\n   * @returns {LayoutMethodRet} 布局对象\n   * @memberof DoonceLayoutEngine\n   */\n  private _layoutWithImg({ img, maxWidth }: { img: Img } & LayoutMethodParams): LayoutMethodRet {\n    let rowList: Row[] = []\n\n    /** 环绕 */\n    if (img.imgSurroundType === ImgSurrounTypeEnum.FLOAT) {\n      /** 首行 */\n      let curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: 1, prevRow: null })\n\n      /** 记录之前行,用来计算当前行 y 坐标 */\n      let prevRow: Row | null = null\n\n      for (let i = 0, curInstance; i < this.inputRowLayoutItemInstanceList.length; i++) {\n        curInstance = this.inputRowLayoutItemInstanceList[i]\n\n        /** 手动换行 */\n        if (curInstance.layoutItemType === LayoutItemTypeEnum.CRLF) {\n          curRow.addChild(curInstance)\n          /** 加入行数组前更新当前行信息 */\n          this._updateCurRowInfo(curRow, prevRow)\n          prevRow = curRow\n          rowList.push(curRow)\n\n          /** 创建新行 */\n          curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: curRow.rowNo + 1, prevRow: curRow })\n        } else {\n          /** 超宽,需要将 curInstance 放在下行 */\n          if (curRow.width + curInstance.width > maxWidth) {\n            /** 加入行数组前更新当前行信息 */\n            this._updateCurRowInfo(curRow, prevRow)\n            prevRow = curRow\n            rowList.push(curRow)\n\n            /** 创建新行 */\n            curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: curRow.rowNo + 1, prevRow })\n          }\n\n          /** 循环检测碰撞,直到找到图片左侧可以放下 curInstance 的行 */\n          while (\n            /** 左侧碰撞,代表左侧无空间, */\n            checkCollision(\n              {\n                width: curInstance.width,\n                height: curInstance.height,\n                x: curRow.width,\n                y: prevRow ? prevRow.y + prevRow.height : 0\n              },\n              img\n            )\n          ) {\n            console.log('checkCollision curInstance :>> ', curInstance)\n            /** 添加图片占位 */\n            curRow.addChild(\n              new ImgPlaceholder({\n                ownerImg: img,\n                height: curRow.height,\n                y: 0 /** 图片占位是相对行定位,所以 y 固定为0 */,\n                rowNo: curRow.rowNo\n              })\n            )\n            curRow.setSize({ width: img.x + img.width })\n\n            /** 超宽,代表右侧无空间,需要将 curInstance 放在下行 */\n            if (curRow.width + curInstance.width > maxWidth) {\n              /** 加入行数组前更新当前行信息 */\n              this._updateCurRowInfo(curRow, prevRow)\n              prevRow = curRow\n              rowList.push(curRow)\n\n              /** 创建新行 */\n              curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: curRow.rowNo + 1, prevRow })\n            }\n          }\n\n          /** 更新当前 layoutItemInstance 的 x 坐标和行号 */\n          curInstance.x = curRow.width\n          curInstance.rowNo = curRow.rowNo\n          /** 将当前 layoutItemInstance 塞入当前行 */\n          curRow.addChild(curInstance)\n          /** 更新当前行宽度 */\n          curRow.setSize({ width: curRow.width + curInstance.width })\n        }\n      }\n\n      /** 最后行 */\n      /** 加入行数组前更新当前行信息 */\n      this._updateCurRowInfo(curRow, prevRow)\n      /** 记录prevRow */\n      prevRow = curRow\n      /** 换行,将当前行塞入数组 */\n      rowList.push(curRow)\n    } else if (img.imgSurroundType === ImgSurrounTypeEnum.ABSOLUTE) {\n      /** 绝对定位 */\n\n      /** 对文本进行行排版即可,图片不影响文字排版,图片位置应提前设置好 */\n      const layoutWithNoneImgRet = this._layoutWithNoneImg({ maxWidth })\n      rowList = layoutWithNoneImgRet.rowList\n    } else {\n      /** 默认下挂 */\n      const layoutWithNoneImgRet = this._layoutWithNoneImg({ maxWidth })\n      rowList = layoutWithNoneImgRet.rowList\n\n      /** 图片渲染在题干的右下 */\n      img.x = maxWidth - img.width\n      const lastRow = rowList[rowList.length - 1]\n      img.y = lastRow.width + img.width <= maxWidth ? lastRow.y : lastRow.y + lastRow.height\n    }\n\n    return { rowList, imgList: [img] }\n  }\n\n  /**\n   * 无图片时用的布局方法\n   *\n   * @date 2023-08-01 10:38:26\n   * @private\n   * @param { maxWidth } 最大宽度\n   * @returns {LayoutMethodRet} 布局对象\n   * @memberof DoonceLayoutEngine\n   */\n  private _layoutWithNoneImg({ maxWidth }: LayoutMethodParams): LayoutMethodRet {\n    const rowList: Row[] = []\n\n    let prevRow: Row | null = null\n\n    /** 首行 */\n    let curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: 1, prevRow: null })\n\n    for (\n      let i = 0, curInstance: InputRowLayoutItemInstance;\n      i < this.inputRowLayoutItemInstanceList.length;\n      i++\n    ) {\n      curInstance = this.inputRowLayoutItemInstanceList[i]\n\n      if (\n        /** 手动换行 */\n        curInstance.layoutItemType === LayoutItemTypeEnum.CRLF ||\n        /** 超宽 */\n        curRow.width + curInstance.width > maxWidth\n      ) {\n        /** 加入rowList前更新当前行信息 */\n        this._updateCurRowInfo(curRow, prevRow)\n        prevRow = curRow\n        rowList.push(curRow)\n\n        /** 创建新行 */\n        curRow = this._createANewRowAndSetInitialSizeAndPos({ rowNo: curRow.rowNo + 1, prevRow })\n      }\n\n      /** 更新当前 layoutItemInstance 的 x 坐标和行号 */\n      curInstance.x = curRow.width\n      curInstance.rowNo = curRow.rowNo\n      /** 将当前 layoutItemInstance 塞入当前行 */\n      curRow.addChild(curInstance)\n      /** 更新当前行宽度 */\n      curRow.setSize({ width: curRow.width + curInstance.width })\n    }\n\n    /** 最后行 */\n    this._updateCurRowInfo(curRow, prevRow)\n    prevRow = curRow\n    rowList.push(curRow)\n\n    return { rowList, imgList: [] }\n  }\n\n  /**\n   * 创建新行并设置初始尺寸和位置\n   *\n   * @date 2023-08-01 10:35:04\n   * @private\n   * @param { rowNo, prevRow } 行号,前一行实例\n   * @returns {Row} 设置好初始尺寸和位置的新行\n   * @memberof DoonceLayoutEngine\n   */\n  private _createANewRowAndSetInitialSizeAndPos({ rowNo, prevRow }: { rowNo: number; prevRow: Row | null }) {\n    const row = new Row({\n      globalFontConfig: this.globalFontConfig,\n      rowNo\n    })\n\n    row.setSize({ width: 0, height: 0 })\n    row.setPos({ x: 0, y: prevRow ? prevRow.y + prevRow.height : 0 })\n\n    return row\n  }\n\n  private _updateCurRowInfo(curRow: Row, prevRow: Row | null) {\n    /** 更新当前行行高 */\n    curRow.height = Math.max(this.globalFontConfig.lineHeight, this.getHighestRowChildHeight(curRow.childs))\n\n    /** 计算当前行 y 坐标,其依赖上一个行高计算后才能计算 */\n    curRow.y = prevRow ? prevRow.y + prevRow.height : 0\n\n    /** 水平对齐行内item */\n    curRow.childs.forEach(child => {\n      /** placeholder 不需水平对齐 */\n      if (child.layoutItemType !== LayoutItemTypeEnum.IMG_PLACEHOLDER) {\n        child.y = Math.abs(curRow.height - child.height) / 2\n      }\n    })\n\n    /** 水平对齐RowLayoutItemGroup中的元素 */\n    curRow.childs\n      .filter((c): c is RowLayoutItemGroup => c.layoutItemType === LayoutItemTypeEnum.ROW_LAYOUT_ITEM_GROUP)\n      .forEach(group => {\n        const [prevInstance, symbolInstance] = group.childs\n\n        /** 挂靠的前字符 */\n        prevInstance.rowNo = group.rowNo\n        /** 坐标相对 gorup */\n        prevInstance.x = 0\n        prevInstance.y = Math.abs(group.height - prevInstance.height) / 2\n\n        /** 悬挂的标点 */\n        symbolInstance.rowNo = group.rowNo\n        /** 坐标相对 gorup */\n        symbolInstance.x = prevInstance.width\n        symbolInstance.y = Math.abs(group.height - symbolInstance.height) / 2\n      })\n\n    return curRow\n  }\n\n  /**\n   * 获取最高 child 的高度\n   *\n   * @date 2023-07-21 16:43:37\n   * @private\n   * @param rowChild\n   * @returns {number} 高度\n   * @memberof DoonceLayoutEngine\n   */\n  private getHighestRowChildHeight(rowChild: RowChild[]): number {\n    return rowChild.reduce((acc, cur) => Math.max(cur.height, acc), 0)\n  }\n\n  /**\n   * 检查字体是否加载完成\n   * 参考:https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check#fonts_that_have_loaded\n   * 使用document.fonts.check()存在误检测,参考:https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet/check#nonexistent_fonts\n   *\n   * @date 2023-07-18 00:33:12\n   * @returns {boolean} 是否加载\n   * @memberof DoonceLayoutEngine\n   */\n  public isFontLoaded() {\n    return this.font.status === 'loaded'\n  }\n}\n"]}