{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description 入口\n */\n\nimport fs from 'fs'\nimport path from 'path'\n\nimport globby from 'globby'\n\nimport Transformer from './transformer'\nimport { normalizePath } from './normalize'\nimport fileSave from 'file-save'\nconst { log, warn, succ, err } = require('./log')\n\nconst defaultGlobbyOptions = {\n  absolute: true,\n  ignore: ['**/node_modules/**']\n}\n\nexport function start({\n  withAST = false, // 是否使用AST进行转换\n  patterns = ['src/**/*.vue', 'src/**/*.js'], // 默认搜索src下面的vue和js文件\n  globbyOptions = {}, // 自定义globby的选项，会覆盖默认的选项\n  resolveConfig = {}, // https://www.npmjs.com/package/enhanced-resolve；和webpack.resolve一致；https://webpack.js.org/configuration/resolve/#resolve\n  debug = false // 设为true，则不会世界写文件\n}) {\n  const _startTime = new Date().getTime()\n  let _rewriteCount = 0\n\n  const options = Object.assign({}, defaultGlobbyOptions, globbyOptions)\n\n  const maybeImportVue = globby.sync(patterns, options)\n\n  if (!maybeImportVue || !maybeImportVue.length) return\n\n  const normalizedPaths = maybeImportVue.map(normalizePath)\n  log('maybeImportVue', normalizedPaths)\n\n  const vueFiles = normalizedPaths.filter((p: string) => /.vue$/.test(p))\n\n  if (!resolveConfig || JSON.stringify(resolveConfig) === '{}') {\n    warn('💢The `resolveConfig` config is empty, the alias path will be ignored!')\n  }\n\n  const myTransformer = new Transformer(vueFiles, resolveConfig || {})\n\n  for (let i = 0, cont = null, filePath = null; i < normalizedPaths.length; i++) {\n    try {\n      filePath = normalizedPaths[i]\n      debug && log(`Processing: ${filePath}`)\n\n      cont = fs.readFileSync(filePath, 'utf8')\n\n      // 不包含需要替换的模块语法，直接跳过\n      if (!Transformer.MODULE_REG.test(cont)) {\n        debug && warn(`Skip: ${filePath},cause not inculde need replace ESModule code`)\n        continue\n      }\n\n      const output = myTransformer.transform({\n        code: cont,\n        fileDir: path.dirname(filePath),\n        withAST,\n        debug\n      })\n\n      if (!debug && output && output !== cont) {\n        fileSave(filePath).write(output)\n        _rewriteCount++\n        succ(`Rewrited: ${filePath}`)\n      }\n    } catch (error) {\n      debug && err(error)\n      continue\n    }\n  }\n\n  !debug && succ(`Total rewrite ${_rewriteCount} file;`)\n  !debug && succ(`Total cost ${new Date().getTime() - _startTime}ms;`)\n}\n"]}