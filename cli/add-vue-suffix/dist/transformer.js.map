{"version":3,"file":"transformer.js","sourceRoot":"","sources":["../src/transformer.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author GuangHui\n * @description 转换\n */\n\nimport t from '@babel/types'\n\nimport { parse } from '@babel/parser'\nimport type { ParserOptions } from '@babel/parser'\n\nimport traverse from '@babel/traverse'\nimport generate from '@babel/generator'\n\nimport { warn, err, info } from './log'\n\nimport { normalizePath } from './normalize'\nimport { createMyResolver } from './resolver'\nimport { create } from 'enhanced-resolve'\n\nexport default class Transformer {\n  static MODULE_REG =\n    /(?:(?:(?:im|ex)port[\\s{}\\w,\\-*]*?from\\s*?(?<SQUOTE>['\"]+?)(?<SMODULE>[^'\"\\s]+)\\k<SQUOTE>)|(?:import\\s*?\\(\\s*?(?:\\/\\*[^*/]*?\\*\\/)?\\s*?(?<DQUOTE>['\"])(?<DMODULE>[^'\"\\s]+)\\k<DQUOTE>\\s*?\\);?));??/g\n\n  resolveConfig: {\n    resolve?: unknown\n    mainFiles?: string[]\n    [k: string]: unknown\n  }\n  vueFiles: string[]\n  resolver: ReturnType<typeof create.sync>\n\n  constructor(vueFiles: string[] = [], resolveConfig: any = {}) {\n    this.resolveConfig = resolveConfig\n    this.vueFiles = vueFiles\n    this.resolver = createMyResolver(this.resolveConfig)\n  }\n\n  /**\n   * 路径是否命中\n   * @param {string} p 待检测路径\n   * @returns {boolean} 是否命中\n   */\n  isHitted(p: string) {\n    return this.vueFiles.includes(p)\n  }\n\n  transform({\n    code,\n    fileDir,\n    withAST = false,\n    debug = false\n  }: {\n    code: string\n    fileDir: string\n    withAST: boolean\n    debug: boolean\n  }) {\n    return withAST ? this.transformWithAST(code) : this.transformWithReg(code, fileDir, debug)\n  }\n\n  transformWithAST(\n    code: string,\n    options: ParserOptions = {\n      sourceType: 'module',\n      plugins: [\n        // enable jsx\n        'jsx'\n      ]\n    }\n  ) {\n    // const testCode = `export * from 'test'; // ExportAllDeclaration\n    // import \"test.css\"; // ImportDeclaration\n    // import Test from 'test'; // ImportDeclaration\n    // export { aa } from 'test2'; // ExportNamedDeclaration\n    // export * as TT from 'test3'; // ExportNamedDeclaration\n    // import(\n    //     /* webpackChunkName:'AiClassReport' */ 'Views/AiClassReport/AiClassReport'\n    //   ); // 动态导入\n    // export default {test:3}; // ExportDefaultDeclaration，无source\n    // `\n\n    const ast = parse(code, options)\n\n    const that = this\n    traverse(ast, {\n      enter: function (path, state) {\n        // 动态导入import('xxx')\n        if (\n          t.isImport(path.node) &&\n          path.parentPath &&\n          path.parentPath.node &&\n          // @ts-ignore\n          path.parentPath.node.arguments &&\n          // @ts-ignore\n          path.parentPath.node.arguments.length\n        ) {\n          if (\n            // @ts-ignore\n            path.parentPath.node.arguments[0] &&\n            // @ts-ignore\n            typeof path.parentPath.node.arguments[0].vaule === 'string' &&\n            // @ts-ignore\n            path.parentPath.node.arguments[0].vaule.indexOf('.vue') < 0\n          ) {\n            try {\n              // @ts-ignore\n              const resolvedModulePath = that.resolver(process.cwd(), path.parentPath.node.arguments[0].value)\n              const normalizedPath = normalizePath(resolvedModulePath as string)\n\n              if (that.isHitted(normalizedPath)) {\n                // @ts-ignore\n                path.node.source.value += '.vue'\n              }\n            } catch (error) {}\n          }\n        }\n\n        // 覆盖ExportAllDeclaration、ExportNamedDeclaration、ImportDeclaration\n        if (\n          t.isExportAllDeclaration(path.node) ||\n          t.isExportNamedDeclaration(path.node) ||\n          t.isImportDeclaration(path.node)\n        ) {\n          if (\n            path.node &&\n            path.node.source &&\n            path.node.source.value &&\n            path.node.source.value.indexOf('.vue') < 0\n          ) {\n            try {\n              const resolvedModulePath = that.resolver(process.cwd(), path.node.source.value)\n\n              const normalizedPath = normalizePath(resolvedModulePath as string)\n\n              if (that.isHitted(normalizedPath)) {\n                path.node.source.value += '.vue'\n              }\n            } catch (error) {}\n          }\n        }\n      }\n    })\n\n    return generate(ast, { retainLines: true, comments: true }, code).code\n  }\n\n  transformWithReg(code: string, fileDir: string, debug: boolean) {\n    if (typeof code !== 'string') return\n\n    return code.replace(Transformer.MODULE_REG, (...args) => {\n      const { SMODULE, DMODULE } = args[7]\n      const input = args[0]\n\n      const modulePath = SMODULE || DMODULE || ''\n      if (!modulePath) {\n        debug && warn('modulePath did not matched')\n        return input\n      }\n\n      // 已经添加了.vue，则不替换\n      if (/\\.vue$/.test(modulePath)) {\n        debug && warn(`Skip: ${modulePath}, cause already has \\`.vue\\` suffix`)\n        return input\n      }\n\n      try {\n        const resolvedModulePath = this.resolver(\n          /^\\./.test(modulePath) ? fileDir : process.cwd(), // 相对路径，需要基于文件路径解析\n          modulePath\n        )\n\n        const normalizedPath = normalizePath(resolvedModulePath as string)\n\n        debug && info(`this.isHitted(${normalizedPath})`, this.isHitted(normalizedPath))\n\n        if (!this.isHitted(normalizedPath)) return input\n\n        const output = this.normalizeTransPath(input, normalizedPath, modulePath, debug)\n\n        debug && info('Transformed ESModule expression', output)\n\n        return output\n      } catch (error) {\n        debug && err(error)\n        return input\n      }\n    })\n  }\n\n  normalizeTransPath(input: string, normalizedPath: string, modulePath: string, debug: boolean) {\n    // 单独处理/Dir这种会被解释为/Dir/index.vue的路径\n    const { mainFiles } = this.resolveConfig\n\n    // /Dir被解析成/Dir/index.js还是/Dir/main.js，取决于mainFiles\n    const mainFilesStr = mainFiles && mainFiles.length ? mainFiles.join('|') : 'index'\n\n    const reg = new RegExp(`\\/((?:${mainFilesStr}).vue)$`)\n\n    const matched = reg.exec(normalizedPath)\n\n    debug && info(`Filename matched:`, JSON.stringify(matched))\n\n    // 解析出来的不是/Dir/index.vue路径(/Dir/test)，直接在其后添加.vue即可\n    if (!matched) return input.replace(modulePath, modulePath + '.vue')\n\n    const fileName = matched[1]\n    return input.replace(\n      modulePath,\n      /\\/$/.test(modulePath) // ./Test/\n        ? modulePath + fileName\n        : new RegExp(`\\/${mainFilesStr}$`).test(modulePath) // ./Test/index\n        ? modulePath + '.vue'\n        : modulePath + '/' + fileName // ./Test\n    )\n  }\n}\n"]}