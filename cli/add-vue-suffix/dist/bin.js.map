{"version":3,"file":"bin.js","sourceRoot":"","sources":["../src/bin.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;AAEH,gDAAuB;AAEvB,+BAA4B;AAC5B,+BAA2B;AAC3B,mCAA6B;AAE7B,IAAI,aAAa,GAAG,EAAE,CAAA;AAEtB,IAAI;IACF,aAAa;IACb,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,UAAI,CAAC,aAAa,CAAC,CAAC,CAAA;IAEzE,aAAa,GAAG,OAAO,CAAA;CACxB;AAAC,OAAO,KAAK,EAAE;IACd,IAAA,SAAG,EAAC,gDAAgD,EAAE,KAAK,CAAC,CAAA;CAC7D;AAED,IAAA,WAAG,EAAC;IACF,aAAa;IACb,aAAa;IACb,QAAQ,EAAE,UAAI,CAAC,QAAQ;IACvB,aAAa;IACb,KAAK,EAAE,UAAI,CAAC,KAAK;IACjB,aAAa;IACb,OAAO,EAAE,UAAI,CAAC,OAAO;CACtB,CAAC,CAAA","sourcesContent":["/**\n * @author GuangHui\n * @description bin\n */\n\nimport path from 'path'\n\nimport { argv } from './arg'\nimport { err } from './log'\nimport { run } from './index'\n\nlet resolveConfig = {}\n\ntry {\n  // @ts-ignore\n  const { resolve } = require(path.join(process.cwd(), argv.resolveConfig))\n\n  resolveConfig = resolve\n} catch (error) {\n  err('get an error when try to resolve resolveConfig', error)\n}\n\nrun({\n  resolveConfig,\n  // @ts-ignore\n  patterns: argv.patterns,\n  // @ts-ignore\n  debug: argv.debug,\n  // @ts-ignore\n  withAST: argv.withAST\n})\n"]}