{"version":3,"file":"log.js","sourceRoot":"","sources":["../src/log.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;AAEH,kDAAyB;AAEzB,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AAErC,SAAS,UAAU,CAAC,OAAoB;IACtC,OAAO,CAAC,GAAG,IAAe,EAAE,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;AACxE,CAAC;AAEY,QAAA,GAAG,GAAG,UAAU,CAAC,eAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA;AACtC,QAAA,IAAI,GAAG,UAAU,CAAC,eAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA;AACvC,QAAA,IAAI,GAAG,UAAU,CAAC,eAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA;AACvC,QAAA,IAAI,GAAG,UAAU,CAAC,eAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA","sourcesContent":["/**\n * @author GuangHui\n * @description log\n */\n\nimport chalk from 'chalk'\n\nconst log = console.log.bind(console)\n\nfunction logFactory(chalkFn: chalk.Chalk) {\n  return (...args: unknown[]) => log(chalkFn(args[0]), ...args.slice(1))\n}\n\nexport const err = logFactory(chalk.hex('#f56c6c'))\nexport const warn = logFactory(chalk.hex('#e6a23c'))\nexport const info = logFactory(chalk.hex('#409eff'))\nexport const succ = logFactory(chalk.hex('#67c23a'))\n"]}