/**
 * This configuration file specifies NPM dependency version selections that affect all projects
 * in a Rush repo.  More documentation is available on the Rush website: https://rushjs.io
 */
 /**
 * 该配置项用于配置 NPM 依赖版本，它会影响 Rush 仓库内的所有项目。
 * 更多信息可以参考 Rush 官网： https://rushjs.io
 */
{
  "$schema": "https://developer.microsoft.com/json-schemas/rush/v5/common-versions.schema.json",

  /**
   * A table that specifies a "preferred version" for a given NPM package.  This feature is typically used
   * to hold back an indirect dependency to a specific older version, or to reduce duplication of indirect dependencies.
   *
   * The "preferredVersions" value can be any SemVer range specifier (e.g. "~1.2.3").  Rush injects these values into
   * the "dependencies" field of the top-level common/temp/package.json, which influences how the package manager
   * will calculate versions.  The specific effect depends on your package manager.  Generally it will have no
   * effect on an incompatible or already constrained SemVer range.  If you are using PNPM, similar effects can be
   * achieved using the pnpmfile.js hook.  See the Rush documentation for more details.
   *
   * After modifying this field, it's recommended to run "rush update --full" so that the package manager
   * will recalculate all version selections.
   */
 /**
   * 一张指定 NPM 包的“偏好版本”的表。该功能通常用于给间接依赖指定某个旧版本
   * 或者减少间接依赖的复制数量。
   *
   * "preferredVersions" 是一个语义化的值（例如： "~1.2.3"）。Rush 将该值插入
   * 到影响包管理机器计算版本的顶层 common/temp/package.json 中的 "dependencies" 字段中。
   * 该字段的效果由包管理器决定，通常不会导致兼容或者违背语义化版本的问题。
   * 如果你使用 PNPM, 其效果类似于 pnpmfile.js 钩子，可以查看 Rush 的文档来了解更多细节。
   *
   * 修改完该字段后，建议执行 "rush update --full" 来使得包管理器重新计算版本。
   */
  "preferredVersions": {
    /**
     * When someone asks for "^1.0.0" make sure they get "1.2.3" when working in this repo,
     * instead of the latest version.
     */
    /**
    * 当仓库内某个依赖请求 "^1.0.0" 时，确保它们会获得 "1.2.3"
    * 版本，而不是最新版本。
    */
    // "some-library": "1.2.3"
    "typescript":"5.4.5"
  },

  /**
   * When set to true, for all projects in the repo, all dependencies will be automatically added as preferredVersions,
   * except in cases where different projects specify different version ranges for a given dependency.  For older
   * package managers, this tended to reduce duplication of indirect dependencies.  However, it can sometimes cause
   * trouble for indirect dependencies with incompatible peerDependencies ranges.
   *
   * The default value is true.  If you're encountering installation errors related to peer dependencies,
   * it's recommended to set this to false.
   *
   * After modifying this field, it's recommended to run "rush update --full" so that the package manager
   * will recalculate all version selections.
   */
  /**
   * 当设定该值为 true 时，仓库中的所有项目、所有依赖将会被自动添加到 preferredVersions 中，
   * 除非不同的项目为某个依赖指定了不同的版本范围。
   * 对于陈旧的版本管理器而言，它们会尝试减少非直接依赖的复制数量。但是，对于不兼容 peerDependencies
   * 的间接依赖而言可能造成问题。
   *
   * 该值的默认值为 true. 如果你在安装期间遇到了同级依赖导致的问题，建议
   * 将它设定为 false.
   *
   * 修改完该字段后，建议执行 "rush update --full" 来使得包管理器重新计算版本。
   */
  "implicitlyPreferredVersions": true,

  /**
   * The "rush check" command can be used to enforce that every project in the repo must specify
   * the same SemVer range for a given dependency.  However, sometimes exceptions are needed.
   * The allowedAlternativeVersions table allows you to list other SemVer ranges that will be
   * accepted by "rush check" for a given dependency.
   *
   * IMPORTANT: THIS TABLE IS FOR *ADDITIONAL* VERSION RANGES THAT ARE ALTERNATIVES TO THE
   * USUAL VERSION (WHICH IS INFERRED BY LOOKING AT ALL PROJECTS IN THE REPO).
   * This design avoids unnecessary churn in this file.
   */
  /**
   * "rush check" 命令用来确保每个项目中的同一版本都有相同的语义化版本。
   * 然而，有时需要一些例外。
   * allowedAlternativeVersions 属性列出 "rush check" 运行时允许的
   * 其他版本的依赖列表。
   *
   * 重要：这张表是针对*额外*的版本，它是通常版本（根据仓库中的所有项目推
   * 断而来）的替代品。这个设计避免了该文件不必要的更新。
   */
  "allowedAlternativeVersions": {
    /**
     * For example, allow some projects to use an older TypeScript compiler
     * (in addition to whatever "usual" version is being used by other projects in the repo):
     */
    /**
     * 例如，允许某些项目使用旧版本的 TypeScript 编译器。
     * （除了其他项目正在使用的“通常”版本，还包括）：
     */
    // "typescript": [
    //   "~2.4.0"
    // ]
    "vue":[
      "2.7.7"
    ],
    "vue-router":[
      "3.5.4"
    ]
  }
}
